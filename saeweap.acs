#library "saeweap"
#import "Aspect.acs"
#import "gamechecker.acs"
#include "zcommon.acs"

global int 42:sae_WNAME[];
int sae_SecAmmoCap[8];

//Constants
#define D_AMMOLOW			40	// If ammo % < this number, the bar and counters will become yellow
#define D_AMMOVERYLOW		20	// If ammo % < this number, the bar and counters will become red
#define D_AMMOEMPTY			0	// Ammo Empty

/* 
 * Number of ammo types to be shown on the HUD as part of the future all-ammo/reserve ammo display
 * If you add more ammo types in the array below, make sure the number here reflects that.
 * Currently not implemented.
*/

// -------------------------

/* 
 * Number of available weapons - If you add more weapons in the arrays below, make sure the number
 * here reflects that. For ammo counts, ensure that all weapons are listed in the first array for each mod.
 */

/* Weapon Arrays */
/* NONE */
	#define NONE_NumOfWeap	1
	#define NONE_StandWeap	0 //Number of standard weapons to show in weaponslist

	// Weapons list - Columns descriptions are as follows:
	// 1st column	---> weapon.
	// 2nd column	---> primary ammo (put "NoPrimary" if the weapon doesn't use primary ammo).
	// 3rd column	---> secondary ammo (put "NoSecondary" if the weapon doesn't use secondary ammo).
	// 4th column	---> Shows Secondary Ammo Counter (put "Yes" if it does or "No" if the weapon doesn't show a unique secondary counter).
	// 5th column	---> Display name of weapon for Ammo Counter (Needs to be 5 or fewer characters to fit on display in all resolutions)
	// 6th column	---> Display name of weapon for Weapons list

	str NONE_weaponslist[NONE_NumOfWeap][6] =
	{
	{" ", " ", " ", " ", " ", " "},
	};
/* #NONE */

/* VANILLA */
	#define VANILLA_NumOfWeap	11
	#define VANILLA_StandWeap 7 //Number of standard weapons to show in weaponslist

	// Weapons list - Columns descriptions are as follows:
	// 1st column ---> weapon.
	// 2nd column ---> primary ammo (put "NoPrimary" if the weapon doesn't use primary ammo).
	// 3rd column ---> secondary ammo (put "NoSecondary" if the weapon doesn't use secondary ammo).
	// 4th column ---> Shows Secondary Ammo Counter (put "Yes" if it does or "No" if the weapon doesn't show a unique secondary counter).
	// 5th column ---> Display name of weapon for Ammo Counter (Needs to be 5 or fewer characters to fit on display in all resolutions)
	// 6th column ---> Display name of weapon for Weapons list

	str VANILLA_weaponslist[VANILLA_NumOfWeap][6] =
	{	
		{"Chainsaw",			"NoPrimary",			"NoSecondary",			"No",		"SAW",			"Chain Saw"},
		{"Pistol",				"Clip",					"NoSecondary",			"No",		"PISTL",		"Pistol"},
		{"Shotgun",				"Shell",				"NoSecondary",			"No",		"SHOT",			"Shotgun"},
		{"SuperShotgun",		"Shell",				"NoSecondary",			"No",		"SSG",			"Super Shotgun"},
		{"Chaingun",			"Clip",					"NoSecondary",			"No",		"CHAIN",		"Chaingun"},
		{"RocketLauncher",		"RocketAmmo",			"NoSecondary",			"No",		"RCKTL",		"Rocket Launcher"},
		{"PlasmaRifle",			"Cell",					"NoSecondary",			"No",		"PLSMA",		"Plasma Rifle"},
		{"BFG9000",				"Cell",					"NoSecondary",			"No",		"BFG9K",		"BFG 9000"},
		/* 
		* My pipebomb goes under this line, specifically for my pipebomb mod
		* doesn't affect normal display unless pipebomb mod is loaded.
		*/
		{"det_pipebomb",		"pipebombammo",			"pipebombammo",			"No",		"PIPE",			"PB Detonator"},
		{"det_satchelcharge",	"satchelchargeammo",	"satchelchargeammo",	"No",		"STCHG",		"SC Detonator"},
		/* 
		* Put all special weapons under this line 
		* (Fists, Dual weapons, Alternate Fire Modes, human shields, etc.)
		*/
		{"Fist",				"NoPrimary",			"NoSecondary",			"No",		"FIST",			"PlaceHolder"},
	};

/* #VANILLA */

/* BD21 */
	#define BDV21_NumOfWeap		46
	#define BDV21_StandWeap		19 //Number of standard weapons to show in weaponslist starting from 0

	// Weapons list - Columns descriptions are as follows:
	// 1st column ---> weapon.
	// 2nd column ---> primary ammo (put "NoPrimary" if the weapon doesn't use primary ammo).
	// 3rd column ---> secondary ammo (put "NoSecondary" if the weapon doesn't use secondary ammo).
	// 4th column ---> Shows Secondary Ammo Counter (put "Yes" if it does or "No" if the weapon doesn't show a unique secondary counter).
	// 5th column ---> Display name of weapon for Ammo Counter (Needs to be 5 or fewer characters to fit on display in all resolutions)
	// 6th column ---> Display name of weapon for Weapons list

	str BDV21_weaponslist[BDV21_NumOfWeap][6] =
	{
		{"BrutalAxe",					"NoPrimary",			"NoSecondary",				"No",		"AXE",		"Axe"},
		{"Chain_Saw",					"NoPrimary",			"NoSecondary",				"No",		"SAW",		"Chain Saw"},
		{"BrutalPistol",				"Clip1",				"BDPistolAmmo",				"Yes",		"57",		"57 Pistol"},
		{"BrutalSMG",					"Clip1",				"BDSMGAmmo",				"Yes",		"SMG",		"Submachine Gun"},
		{"AssaultShotgun",				"AmmoShell",			"AssaultShotgunAmmo",		"Yes",		"AA12",		"Assault Shotgun"},
		{"Shot_Gun",					"AmmoShell",			"ShotgunAmmo",				"Yes",		"SHOT",		"Shotgun"},
		{"SSG",							"AmmoShell",			"SSGAmmo",					"Yes",		"SSG",		"Super Shotgun"},
		{"Machinegun",					"Clip2",				"AmmoRocket",				"Yes",		"MACH",		"Machine Gun"},
		{"Rifle",						"Clip2",				"RifleAmmo",				"Yes",		"RIFLE",	"Assault Rifle"},
		{"MiniGun",						"Clip2",				"NoSecondary",				"No",		"MINI",		"Mini Gun"},
		{"GrenadeLauncher",				"AmmoRocket",			"NoSecondary",				"No",		"GRENL",	"Grenade Launcher"},//v20
		{"Rocket_Launcher",				"AmmoRocket",			"RocketRounds",				"Yes",		"RCKTL",	"Rocket Launcher"},
		{"RailGun",						"AmmoCell",				"RailgunAmmo",				"Yes",		"RAIL",		"Rail Gun"},
		{"Plasma_Gun",					"AmmoCell",				"PlasmaAmmo",				"Yes",		"PLSMA",	"Plasma Gun"},
		{"BFG10k",						"AmmoCell",				"NoSecondary",				"No",		"BFG10",	"BFG 10000"}, 
		{"Unmaker",						"SoulAmmo",				"NoSecondary",				"No",		"UNMKR",	"Unmaker"},
		{"BIG_FUCKING_GUN",				"AmmoCell",				"NoSecondary",				"No",		"BFG9K",	"BFG 9000"},
		{"FlameCannon",					"Gas",					"NoSecondary",				"No",		"FCAN",		"Flame Cannon"},
		{"HellishMissileLauncher",		"MiniHellRocketAmmo",	"MiniHellRocketAmmo",		"No",		"HELL",		"Revenant Launcher"},
		{"Flamethrower2",				"Gas",					"NoSecondary",				"No",		"FTHRW",	"Flame Thrower"},
		/* My pipebomb goes under this line, specifically for my pipebomb mod doesn't affect normal display unless pipebomb mod is loaded. */
		{"det_pipebomb",				"pipebombammo",			"pipebombammo",				"No",		"PIPE", 	"PB Detonator"},
		{"det_satchelcharge",			"satchelchargeammo",	"satchelchargeammo",		"No",		"STCHG",	"SC Detonator"},
		/* Put all special weapons under this line (Fists, Dual weapons, Alternate Fire Modes, human shields, etc.) */
		{"HandGrenades",				"GrenadeAmmo",			"NoSecondary",				"No",		"FRAG",		"PlaceHolder"},
		{"Melee_Attacks",				"NoPrimary",			"NoSecondary",				"No",		"FIST",		"PlaceHolder"},
		{"DualPistols",					"Clip1",				"BDDualPistolAmmo",			"Yes",		"DPSTL",	"PlaceHolder"}, //v20
		{"DualSMG",						"Clip1",				"BDDualSMGAmmo",			"Yes",		"DSMG",		"PlaceHolder"}, //v20
		{"DualRifles",					"Clip2",				"DoubleRifleAmmo",			"Yes",		"DRIFL",	"PlaceHolder"}, //v20
		{"DualPlasmaRifles",			"AmmoCell",				"DoublePlasmaAmmo",			"Yes",		"DPLSM",	"PlaceHolder"}, //v20
		{"ImpShield",				 	"Meatshieldgunammo",	"MeatAmmo",					"No",		"RIFLE",	"PlaceHolder"},
		{"ZmanShield",			 		"Meatshieldgunammo",	"MeatAmmo",					"No",		"RIFLE",	"PlaceHolder"},
		{"SguyShield",					"Meatshieldgunammo",	"MeatAmmo",					"No",		"RIFLE",	"PlaceHolder"},
		{"ClassicFist",					"NoPrimary",			"NoSecondary",				"No",		"FIST",		"PlaceHolder"},
		{"ClassicSaw",					"NoPrimary",			"NoSecondary",				"No",		"SAW",		"Chain Saw"},
		{"ClassicPistol",				"Clip2",				"NoSecondary",				"No",		"PISTL",	"Pistol"},
		{"ClassicShotgun",				"AmmoShell",			"NoSecondary",				"No",		"SHOT",		"Shotgun"},
		{"ClassicSSG",					"AmmoShell",			"NoSecondary",				"No",		"SSG",		"Super Shotgun"},
		{"ClassicChaingun",				"Clip2",				"NoSecondary",				"No",		"CHGUN",	"Chain Gun"},
		{"ClassicRocketLauncher",		"RocketAmmo",			"NoSecondary",				"No",		"RCKTL",	"Rocket Launcher"}, //v20
		{"ClassicPlasmaRifle",			"RocketAmmo",			"NoSecondary",				"No",		"PLSMA",	"Plasma Rifle"},
		{"VanillaBFG9000",				"AmmoCell",				"NoSecondary",				"No",		"BFG9K",	"BFG 9000"},
		{"b_jawbone",					"jawboneammo",			"NoSecondary",				"No",		"JAWB",		"PlaceHolder"},
		{"HitlersBuzzsaw",				"BuzzsawAmmo",			"NoSecondary",				"No",		"MG42",		"Hitler's Buzzsaw"},
		{"DualSMG",						"Clip1",				"BDDualSMGAmmo",			"Yes",		"DUAL",		"PlaceHoler"},
		{"MP40",						"Clip1",				"MP40Ammo",					"Yes",		"MP40",		"MP40"},
		{"NukeLauncher",				"Nuke",					"NoSecondary",				"No",		"NUKE",		"Nuke Launcher"},
		{"ClassicSMG",					"Clip2",				"NoSecondary",				"No",		"SMG",		"SMG"},
	};
/* #BD21 */

// The array below is a special case for v20's "Purist" class vanilla weapons and weaponlist.
/* BD21_Purist */
	#define BDV21_PURIST_NumOfWeap	12
	#define BDV21_PURIST_StandWeap 9 //Number of standard weapons to show in weaponslist

	str BDV21_PURIST_weaponslist[BDV21_PURIST_NumOfWeap][6] =
	{
	{"ClassicSaw",              "NoPrimary",          	"NoSecondary", 			"No",	"SAW", "Chain Saw"},
	{"ClassicPistol",                  "Clip2",               	"NoSecondary",    		"No",	"PISTL", "Pistol"},
	{"ClassicSMG",					"Clip2",				"NoSecondary",			"No",	"SMG", "SMG"},
	{"ClassicShotgun",               "AmmoShell",              	"NoSecondary",  		"No",	"SHOT", "Shotgun"},
	{"ClassicSSG",                    "AmmoShell",              	"NoSecondary",  		"No",	"SSG", "Super Shotgun"},
	{"ClassicChaingun",               "Clip2",               	"NoSecondary",  		"No",	"CHGUN", "Chain Gun"},
	{"ClassicRocketLauncher",       "AmmoRocket",         	"NoSecondary",  			"No",	"RCKTL", "Rocket Launcher"}, //v20
	{"ClassicPlasmaRifle",        "AmmoCell",         	"NoSecondary", 		"No",	"PLSMA", "Plasma Rifle"},
	{"VanillaBFG9000",        "AmmoCell",             	"NoSecondary",  		"No",	"BFG9K", "BFG 9000"},
	{"Flamethrower2",			"Gas",					"NoSecondary",			"No",	"FTHRW", "Flame Thrower"},
	// My pipebomb goes under this line, specifically for my pipebomb mod - doesn't affect normal display unless pipebomb mod is loaded.
	{"det_pipebomb",			 "pipebombammo",		"pipebombammo",			"No",	"PIPE", "PB Detonator"},
	{"det_satchelcharge",		 "satchelchargeammo",	"satchelchargeammo",	"No",	"STCHG",	"SC Detonator"},
	// Put all special weapons under this line (Fists, Dual weapons, Alternate Fire Modes, human shields, etc.)
	};

/* BD21_Purist */

/* PB */
	#define UAC_EXP_WEAPONS 2 // Number of special circumstance weapons (Pipebombs and Satchel Charge)

	#define PB_NumOfWeap	45
	#define PB_StandWeap	22 //Number of standard weapons to show in weaponslist

	// Weapons list - Columns descriptions are as follows:
	// 1st column ---> weapon.
	// 2nd column ---> primary ammo (put "NoPrimary" if the weapon doesn't use primary ammo).
	// 3rd column ---> secondary ammo (put "NoSecondary" if the weapon doesn't use secondary ammo).
	// 4th column ---> Shows Secondary Ammo Counter (put "Yes" if it does or "No" if the weapon doesn't show a unique secondary counter).
	// 5th column ---> Display name of weapon for Ammo Counter (Needs to be 5 or fewer characters to fit on display in all resolutions)
	// 6th column ---> Display name in weapon list
	// 7th column ---> Is shown weapon

	str PB_weaponslist[PB_NumOfWeap][7] =
	{
	{"PB_Axe",								"NoPrimary",					"NoSecondary",				"No",	"AXE",		"Fire Axe", 				"YES"},			//	0
	{"PB_Chainsaw",							"Gas",							"NoSecondary",				"No",	"SAW",		"Chainsaw", 				"YES"},			//	1
	{"Melee_Attacks",						"NoPrimary",					"NoSecondary",				"No",	"FISTS",	"Fists", 					"YES"},				//	2
	{"PB_Pistol",							"PistolBullets",				"PrimaryPistolAmmo",		"Yes",	"PISTL",	".45 Pistol", 		"YES"},		//	3
	{"PB_Revolver",							"PistolBullets",				"RevolverAmmo",				"Yes",	"MGNM",		".500 Magnum", 			"YES"},			//	4
	{"PB_MP40",								"PistolBullets",				"MP40Ammo",					"Yes",	"MP40",		"Maschinenpistole 40", 		"HIDDEN"},	//	25
	{"PB_SMG",								"PistolBullets",				"SMGAmmo",					"Yes",	"UAC17",	"UAC-17 SMG", 				"YES"},			//	5
	{"PB_Shotgun",							"NewShell",						"ShotgunAmmo",				"Yes",	"SHOT",		"Shotgun", 					"YES"},				//	6
	{"PB_Autoshotgun",						"NewShell",						"AutoShotgunAmmo",			"Yes",	"AUTO",		"Auto-Shotgun", 			"YES"},		//	7
	{"PB_SSG",								"NewShell",						"SSGAmmoCounter",			"Yes",	"SSG",		"Sawed-Off Shotgun", 		"YES"},	//	8
	{"Rifle",								"NewClip",						"RifleAmmo",				"Yes",	"UAC30",	"UAC-30 DMR", 				"YES"},			//	9
	{"PB_Carbine",							"NewClip",						"XRifleAmmo",				"Yes",	"UAC41",	"UAC-41 Carbine", 			"YES"},		//	10
	{"PB_Minigun",							"NewClip",						"NoSecondary",				"No",	"MINI",		"UAC Mach-3 Minigun", 		"YES"},				//	11
	{"PB_Nailgun",							"NewClip",						"NoSecondary",				"Yes",	"NAIL",		"UAC-240 Nailgun", 			"YES"},				//	12
	{"PB_MG42",								"NewClip",						"MG42HeatLevel",			"Yes",	"MG42",		"Maschinengewehr 42", 		"HIDDEN"},	//	26
	{"PB_SuperGL",							"SpecialGrenadeRounds",			"GrenadeRounds",			"Yes",	"MGL",		"MGL Auto", 			"YES"},	//	13
	{"PB_RocketLauncher",					"RocketAmmo",					"RocketRounds",				"Yes",	"RCKTL",	"Rocket Launcher", 			"YES"},		//	14
	{"PB_M1Plasma",							"Cell",							"PlasmaAmmo",				"Yes",	"PLSMA",	"M1 Plasma Rifle", 		"YES"},		//	15
	{"PB_M2Plasma",							"Cell",							"M2PlasmaAmmo",				"Yes",	"PLSM2",	"M2 Heavy Plasma Rifle","YES"},		//	16
	{"PB_Freezer",							"Cell",							"FreezerAmmo",				"Yes",	"CRYO",		"Cryogenic Dispersion Rifle", 			"YES"},		//	17
	{"PB_Railgun",							"Cell",							"RailgunAmmo",				"Yes",	"RAIL",		"MKIII Railgun", 				"YES"},			//	18
	{"BHGEN",								"Cell",							"Cell",						"No",	"BHGEN",	"Black Hole Gen", 			"YES"},		//	19
	{"PB_Unmaker",							"Gas",							"DemonPower",				"Yes",	"UNMKR",	"Unmaker", 					"HIDDEN"},				//	28
	{"PB_BFG9000",							"Cell",							"NoSecondary",				"No",	"BFG9K",	"BFG 9000 Mark IV", 				"YES"},			//	20
	{"PB_Flamethrower",						"Gas",							"NoSecondary",				"Yes",	"FLAME",	"UAC-M3 Flamethrower", 			"YES"},		//	21
	{"Hell_rifle",							"DemonPower",					"HellAmmo",					"Yes",	"DTECH",	"Demon-Tech Rifle", 		"YES"},	//	22
	// Put all special weapons under this line (Fists, Dual weapons, Alternate Fire Modes, human shields, etc.)
	// SECRET WEAPONS
	{"PB_Deagle",							"PistolBullets",				"DeagleAmmo",				"Yes",	"DEAGL",	"UAC .50 Hand Cannon", 		"NO"},	//	23
	{"PB_QuadSG",							"NewShell",						"QSSGAmmoCounter",			"Yes",	"QUAD",		"Quad-Barrel Shotgun", 		"NO"},	//	24
	{"PB_PulseCannon",						"Cell",							"PulseCannonAmmo",			"Yes",	"DMAT",		"Dark Matter Rifle", 			"NO"},		//	27
	{"PB_LMG",								"NewClip",						"LMGAmmo",					"Yes",	"UC349",	"UAC-349 LMG", 				"NO"},			//	29
	// SHIELDS
	{"ImpShield",							"Meatshieldgunammo",			"MeatAmmo",					"No",	"MSHLD",	"PlaceHolder", 				"NO"},			//	30
	{"ZmanShield",							"Meatshieldgunammo",			"MeatAmmo",					"No",	"MSHLD",	"PlaceHolder", 				"NO"},			//	31
	{"SguyShield",							"Meatshieldgunammo",			"MeatAmmo",					"No",	"MSHLD",	"PlaceHolder", 				"NO"},			//	32
	// MODES		
	{"HasFragmentation",					"RocketAmmo",					"NoSecondary",				"No",	"FRAG",		"PlaceHolder", 				"NO"},			//	33
	{"HasSlugs",							"NewShell",						"ShotgunAmmo",				"Yes",	"SLUG",		"PlaceHolder", 				"NO"},			//	34
	{"EquipDeathDealer",					"NewClip",						"NoSecondary",				"No",	"TPLMG",	"PlaceHolder", 				"NO"},			//	35
	{"HasRailGun",							"MiniHellRocketAmmo",			"MiniHellRocketAmmo",		"No",	"HRAIL",	"PlaceHolder", 				"NO"},			//	36
	{"DaedabusSlimeSelected",				"Gas",							"NoSecondary",				"No",	"SLIME",	"PlaceHolder", 				"NO"},			//	37
	{"InfraredActivated",					"Cell",							"RailgunAmmo",				"Yes",	"INFRD",	"PlaceHolder", 				"NO"},			//	38
	{"BFGGuardMode",						"Cell",							"NoSecondary",				"No",	"GUARD",	"PlaceHolder", 				"NO"},			//	39
	{"BFGLaserMode",						"Cell",							"NoSecondary",				"No",	"LASER",	"PlaceHolder", 				"NO"},			//	40
	{"FireModeAcidGun",						"DemonPower",					"HellAmmo",					"Yes",	"CAUST",	"PlaceHolder", 				"NO"},			//	41
	{"EquippedNailRounds",					"NewClip",						"HMGAmmo",					"Yes",	"HRPN",		"PlaceHolder", 				"NO"},			//	42
	{"VanillaRifle",						"NewClip",						"VanillaRifleAmmo",			"Yes",	"Rifle",	"PlaceHolder", 				"NO"},			//	43
	{"DualVanillaRifles",					"NewClip",						"DoubleVanillaRifleAmmo",	"Yes",	"DLAR",		"PlaceHolder", 				"NO"},			//	44
	};
/* #PB */

// The array below is a special case for PB's "Classic v20" weaponlist.
/* PB_Classic */
	#define PB_CLASSIC_NumOfWeap	13
	#define PB_CLASSIC_StandWeap 10 //Number of standard weapons to show in weaponslist

	str PB_CLASSIC_weaponslist[PB_CLASSIC_NumOfWeap][6] =
	{
	{"Vanilla_Chain_saw",              "NoPrimary",          	"NoSecondary", 			"No",	"SAW", "Chain Saw"},
	{"VanillaRifle",           "NewClip",               	"VanillaRifleAmmo",    		"Yes",	"Rifle", "Assault Rifle"},
	{"Shot_Gun",               "NewShell",              "ShotgunAmmo",  "Yes",			"SHOT", "Shotgun"},//	5
	{"Vanilla_SSG",                    "NewShell",              "SSGAmmoCounter",  "Yes",		"SSG", "Super Shotgun"},//	6
	{"Vanilla_Mini_Gun",               "NewClip",               "NoSecondary", "No",			"MINI", "Minigun"},//	8
	{"Rocket_Launcher",        "RocketAmmo",         "RocketRounds", "Yes",			"RCKTL", "Rocket Launcher"},//	13
	{"Vanilla_Plasma_Gun",             "Cell",               "PlasmaAmmo",   "Yes",			"PLSMA", "Plasma Rifle"},//	15
	{"BIG_FUCKING_GUN",        "Cell",               "NoSecondary",  "No",			"BFG9K", "BFG 9000"},//	20
	{"HellishMissileLauncher", "MiniHellRocketAmmo", "MiniHellRocketAmmo",  "No",		"HELL", "Revenant Launcher"},//	21
	{"FlameCannon",            "Gas",                "NoSecondary",  "No",			"FLAME", "Flame Cannon"},//	22
	{"SecretWeapon_MP40",      "NewClip",               "NoSecondary",  "No",				"MP40", "MP40"},//	24
	// My pipebomb goes under this line, specifically for my pipebomb mod - doesn't affect normal display unless pipebomb mod is loaded.
	{"det_pipebomb",			 "pipebombammo",		"pipebombammo",			"No",	"PIPE", "PB Detonator"},
	{"det_satchelcharge",		 "satchelchargeammo",	"satchelchargeammo",	"No",	"STCHG",	"SC Detonator"},
	
	};

/* #PB_Classic */

/* PB_Trad */
	#define PB_TRAD_NumOfWeap	10
	#define PB_TRAD_StandWeap 7 //Number of standard weapons to show in weaponslist

	str PB_TRAD_weaponslist[PB_TRAD_NumOfWeap][6] =
	{
	{"Traditional_Chainsaw",              "NoPrimary",          	"NoSecondary", 			"No",	"SAW", "Chain Saw"},
	{"Traditional_Pistol",           "NewClip",               	"VanillaRifleAmmo",    		"Yes",	"Rifle", "9mm"},
	{"Traditional_Shotgun",               "NewShell",              "ShotgunAmmo",  "Yes",			"SHOT", "Shotgun"},//	5
	{"Traditional_SSG",                    "NewShell",              "SSGAmmoCounter",  "Yes",		"SSG", "Super Shotgun"},//	6
	{"Traditional_Chaingun",               "NewClip",               "NoSecondary", "No",			"MINI", "Chain Gun"},//	8
	{"Traditional_RocketLauncher",        "RocketAmmo",         "RocketRounds", "Yes",			"RCKTL", "Rocket Launcher"},//	13
	{"Traditional_PlasmaRifle",             "Cell",               "PlasmaAmmo",   "Yes",			"PLSMA", "Plasma Gun"},//	15
	{"Traditional_BFG",        "Cell",               "NoSecondary",  "No",			"BFG9K", "BFG 9000"},//	20
	// My pipebomb goes under this line, specifically for my pipebomb mod - doesn't affect normal display unless pipebomb mod is loaded.
	{"det_pipebomb",			 "pipebombammo",		"pipebombammo",			"No",	"PIPE", "PB Detonator"},
	{"det_satchelcharge",		 "satchelchargeammo",	"satchelchargeammo",	"No",	"STCHG",	"SC Detonator"},
	};
/* #PB_Trad */

/* BP */
	#define BP_NumOfWeap	32
	#define BP_StandWeap 12 //Number of standard weapons to show in weaponslist

	// Weapons list - Columns descriptions are as follows:
	// 1st column ---> weapon.
	// 2nd column ---> primary ammo (put "NoPrimary" if the weapon doesn't use primary ammo).
	// 3rd column ---> secondary ammo (put "NoSecondary" if the weapon doesn't use secondary ammo).
	// 4th column ---> Shows Secondary Ammo Counter (put "Yes" if it does or "No" if the weapon doesn't show a unique secondary counter).
	// 5th column ---> Display name of weapon for Ammo Counter (Needs to be 5 or fewer characters to fit on display in all resolutions)
	// 6th column ---> Display name of weapon for Weapons list

	str BP_weaponslist[BP_NumOfWeap][6] =
	{
	{"Chain_Saw",              "NoPrimary",          	"NoSecondary", 			"No",	"SAW", "Chain Saw"},
	{"MP40",      "Clip3",               	"MP40Ammo",  				"Yes",	"MP40", "MP40"},
	{"BP_Pistol",        		"Clip3",               	"PistolAmmo",  		"Yes",	"PISTOL", "Beretta"},
	{"SSG",                    "Shell",              	"SSGAmmo",  		"Yes",	"SSG", "Super Shotgun"},
	{"Shot_Gun",               "Shell",              	"ShotgunAmmo",  		"Yes",	"SHOT", "Shotgun"},
	{"Mini_Gun",               "Clip2",               	"NoSecondary",  		"No",	"MINI", "Mini Gun"},
	{"HeavyRifle",        		"Clip2",         	"Mp40Ammo2", 		"Yes",	"HEAVY", "Heavy Rifle"},
	{"Rifle",                  "Clip2",               	"RifleAmmo",    		"Yes",	"RIFLE", "Assault Rifle"},
	{"Rocket_Launcher",        "RocketAmmo",         	"RocketRounds", 		"Yes",	"RCKTL", "Rocket Launcher"},
	{"Plasma_Gun",             "Cell",               	"PlasmaAmmo",   		"Yes",	"PLSMA", "Plasma Gun"},
	{"BIG_FUCKING_GUN",        "Cell",               	"NoSecondary",  		"No",	"BFG9K", "BFG 9000"},
	{"HellishMissileLauncher", "MiniHellRocketAmmo", 	"MiniHellRocketAmmo",  	"No",	"HELL", "Revenant Launcher"},
	{"FlameCannon",            "Gas",                	"NoSecondary",  		"No",	"FLAME", "Flame Cannon"},
	//  {"BFG10000",				 "Cell",				"NoSecondary", 			"No",	"BFG10", "BFG 10000"},
	// My pipebomb goes under this line, specifically for my pipebomb mod - doesn't affect normal display unless pipebomb mod is loaded.
	{"det_pipebomb",			 "pipebombammo",		"pipebombammo",			"No",	"PIPE", "PB Detonator"},
	{"det_satchelcharge",		 "satchelchargeammo",	"satchelchargeammo",	"No",	"STCHG",	"SC Detonator"},
	// Put all special weapons under this line (Fists, Dual weapons, Alternate Fire Modes, human shields, etc.)
	{"HandGrenades",      "GrenadeAmmo",         	"NoSecondary",  				"No",	"FRAG", "Hand Grenades"},
	{"Melee_Attacks",          "NoPrimary",          	"NoSecondary", 			"No",	"FIST", "PlaceHolder"},
	{"DualRifles",			 "Clip2",				"DoubleRifleAmmo",		"Yes",	"DRIFL", "PlaceHolder"}, //v20
	{"BrutalPistol",			 "Clip",				"BDPistolAmmo",			"Yes",	"PISTL", "PlaceHolder"},
	{"Grenade_Launcher",       "RocketAmmo",         	"NoSecondary",  			"No",	"GRENL", "PlaceHolder"}, //v19 backwards compatibility
	{"DualPlasmaRifles",		 "Cell",				"DoublePlasmagunAmmo",	"Yes",	"DPLSM", "PlaceHolder"}, //v20
	{"ImpShield",				 "Meatshieldgunammo",	"MeatAmmo",				"No",	"RIFLE", "PlaceHolder"},
	{"ZmanShield",			 "Meatshieldgunammo",	"MeatAmmo",				"No",	"RIFLE", "PlaceHolder"},
	{"SguyShield",			 "Meatshieldgunammo",	"MeatAmmo",				"No",	"RIFLE", "PlaceHolder"},//
	//  {"ClassicFist",          "NoPrimary",          	"NoSecondary", 			"No",	"FIST", "PlaceHolder"},
	{"sdfasdf",              "GrenadeAmmo",          	"NoSecondary", 			"No",	"GREN", "Hand Grenade"},
	{"b_jawbone",			 	 "jawboneammo",			"NoSecondary",			"No",	"JAWB", "PlaceHolder"},
	{"Quad_Shotgun",       "Shell",         	"QuadAmmo",  			"Yes",	"QUAD", "Quad Shotgun"}, //v20
	{"NewChain_Gun",               "Clip2",               	"NoSecondary",  		"No",	"CHGUN", "Chain Gun"},
	{"M60",                    "Clip2",              	"HMGAmmo",  		"Yes",	"HMG", "Heavy Machine Gun"},
	{"GrenadeLauncher",               "RocketAmmo",              	"MortarRound",  		"Yes",	"GLCHR", "Grenade Launcher"},
	//  {"GrenadeLauncher",       "RocketAmmo",         	"NoSecondary",  			"No",	"GRENL", "Grenade Launcher"}, //v20
	{"RailGun",               "Cell",               	"RailgunAmmo",  		"Yes",	"RAIL", "Rail Gun"},
	{"M2",                  "Cell",               	"M2Ammo",    		"Yes",	"M2", "M2 Plasma Rifle"},
	};
/* #BP */

// The array below is a special case for v20's "Purist" class vanilla weapons and weaponlist.
/* BP_Purist */
	#define BP_PURIST_NumOfWeap	13
	#define BP_PURIST_StandWeap 10 //Number of standard weapons to show in weaponslist

	str BP_PURIST_weaponslist[BP_PURIST_NumOfWeap][6] =
	{
	{"ClassicSaw",              "NoPrimary",          	"NoSecondary", 			"No",	"SAW", "Chain Saw"},
	{"ClassicPistol",                  "Clip2",               	"NoSecondary",    		"No",	"PISTL", "Pistol"},
	{"ClassicShotgun",               "Shell",              	"NoSecondary",  		"No",	"SHOT", "Shotgun"},
	{"ClassicSSG",                    "Shell",              	"NoSecondary",  		"No",	"SSG", "Super Shotgun"},
	{"ClassicChaingun",               "Clip2",               	"NoSecondary",  		"No",	"CHGUN", "Chain Gun"},
	{"ClassicRocketLauncher",       "RocketAmmo",         	"NoSecondary",  			"No",	"RCKTL", "Rocket Launcher"}, //v20
	{"ClassicPlasmaRifle",        "RocketAmmo",         	"NoSecondary", 		"No",	"PLSMA", "Plasma Rifle"},
	{"VanillaBFG9000",        "Cell",               	"NoSecondary",  		"No",	"BFG9K", "BFG 9000"},
	{"HellishMissileLauncher", "MiniHellRocketAmmo", 	"MiniHellRocketAmmo",  	"No",	"HELL", "Revenant Launcher"},
	{"FlameCannon",            "Gas",                	"NoSecondary",  		"No",	"FLAME", "Flame Cannon"},
	{"MP40",      "Clip2",               	"MP40Ammo",  				"Yes",	"MP40", "MP40"},
	// My pipebomb goes under this line, specifically for my pipebomb mod - doesn't affect normal display unless pipebomb mod is loaded.
	{"det_pipebomb",			 "pipebombammo",		"pipebombammo",			"No",	"PIPE", "PB Detonator"},
	{"det_satchelcharge",		 "satchelchargeammo",	"satchelchargeammo",	"No",	"STCHG",	"SC Detonator"},
	};

/* #BP_Purist */

/* JOHNNY */
	#define JOHNNY_NumOfWeap	18
	#define JOHNNY_StandWeap 11 //Number of standard weapons to show in weaponslist

	// Weapons list - Columns descriptions are as follows:
	// 1st column ---> weapon.
	// 2nd column ---> primary ammo (put "NoPrimary" if the weapon doesn't use primary ammo).
	// 3rd column ---> secondary ammo (put "NoSecondary" if the weapon doesn't use secondary ammo).
	// 4th column ---> Shows Secondary Ammo Counter (put "Yes" if it does or "No" if the weapon doesn't show a unique secondary counter).
	// 5th column ---> Display name of weapon for Ammo Counter (Needs to be 5 or fewer characters to fit on display in all resolutions)
	// 6th column ---> Display name of weapon for Weapons list

	str JOHNNY_weaponslist[JOHNNY_NumOfWeap][6] =
	{
	{"Chain_Saw",              "NoPrimary",          	"NoSecondary", 			"No",	"SAW", "Chain Saw"},
	{"BrutalPistol",			 "BDPistolAmmo",				"BDPistolAmmo",			"No",	"PISTL", "Pistol"},
	{"Rifle",                  "NewClip",               	"RifleAmmo",    		"Yes",	"RIFLE", "Assault Rifle"},
	{"Shot_Gun",               "NewShell",              	"ShotgunAmmo",  		"Yes",	"SHOT", "Combat Shotgun"},
	{"SSG",                    "NewShell",              	"NoSecondary",  		"No",	"SSG", "Super Shotgun"},
	{"Mini_Gun",               "NewClip",               	"NoSecondary",  		"No",	"MINI", "Mini Gun"},
	{"Rocket_Launcher",        "NewRocketAmmo",         	"RocketRounds", 		"Yes",	"RCKTL", "Rocket Launcher"},
	{"Plasma_Gun",             "PlasmaHeat",               	"NewCell",   		"Yes",	"PLSMA", "Plasma Rifle"},
	{"BIG_FUCKING_GUN",        "NewCell",               	"NoSecondary",  		"No",	"BFG", "BFG 9600"},
	{"HellishMissileLauncher", "MiniHellRocketAmmo", 	"MiniHellRocketAmmo",  	"No",	"HELL", "Revenant Seeker"},
	{"FlameCannon",            "Gas",                	"NoSecondary",  		"No",	"FLAME", "Flame Cannon"},
	{"AllyRadio",			 	 "RadioCalls",			"NoSecondary",			"No",	"RADIO", "Support Radio"},
	// My pipebomb goes under this line, specifically for my pipebomb mod - doesn't affect normal display unless pipebomb mod is loaded.
	{"det_pipebomb",			 "pipebombammo",		"pipebombammo",			"No",	"PIPE", "PB Detonator"},
	{"det_satchelcharge",		 "satchelchargeammo",	"satchelchargeammo",	"No",	"STCHG",	"SC Detonator"},
	// Put all special weapons under this line (Fists, Dual weapons, Alternate Fire Modes, human shields, etc.)
	{"ImpShield",				 "Meatshieldgunammo",	"MeatAmmo",				"No",	"RIFLE", "PlaceHolder"},
	{"ZmanShield",			 "Meatshieldgunammo",	"MeatAmmo",				"No",	"RIFLE", "PlaceHolder"},
	{"SguyShield",			 "Meatshieldgunammo",	"MeatAmmo",				"No",	"RIFLE", "PlaceHolder"},
	{"b_jawbone",			 	 "jawboneammo",			"NoSecondary",			"No",	"JAWB", "PlaceHolder"},
	};

/* #JOHNNY */

/* B64 */
	#define BRUTAL64_NumOfWeap	21
	#define BRUTAL64_StandWeap 9 //Number of standard weapons to show in weaponslist

	// Weapons list - Columns descriptions are as follows:
	// 1st column ---> weapon.
	// 2nd column ---> primary ammo (put "NoPrimary" if the weapon doesn't use primary ammo).
	// 3rd column ---> secondary ammo (put "NoSecondary" if the weapon doesn't use secondary ammo).
	// 4th column ---> Shows Secondary Ammo Counter (put "Yes" if it does or "No" if the weapon doesn't show a unique secondary counter).
	// 5th column ---> Display name of weapon for Ammo Counter (Needs to be 5 or fewer characters to fit on display in all resolutions)
	// 6th column ---> Display name of weapon for Weapons list

	str BRUTAL64_weaponslist[BRUTAL64_NumOfWeap][6] =
	{
	// Put all regular weapons in order under this line
	{"64Chainsaw",              "SawGas",          	"NoSecondary", 			"No",	"SAW",	"Chain Saw"},
	{"64Pistol",                  "Clip",               	"NoSecondary",    		"No",	"PISTOL", "Pistol"},
	{"64Shotgun",               "Shell",              	"NoSecondary",  		"No",	"SHOT", "Shotgun"},
	{"64SuperShotgun",                    "Shell",              	"NoSecondary",  		"No",	"SSG", "Super Shotgun"},
	{"64Rifle",				"Clip",						"NoSecondary",			"No",	"RIFLE",	"Rifle"},
	{"64Chaingun",               "Clip",               	"NoSecondary",  		"No",	"CHAIN", "Chaingun"},
	{"64RocketLauncher",        "RocketAmmo",         	"NoSecondary", 		"No",	"RCKTL", "Rocket Launcher"},
	{"64PlasmaRifle",             "Cell",               	"NoSecondary",   		"No",	"PLSMA", "Plasma Rifle"},
	{"64BFG9000",        "Cell",               	"NoSecondary",  		"No",	"BFG9K", "BFG 9000"},
	{"Unmaker",            "SoulAmmo",                	"NoSecondary",  		"No",	"UNMKR", "Unmaker"},
	// My pipebomb goes under this line, specifically for my pipebomb mod - doesn't affect normal display unless pipebomb mod is loaded.
	{"det_pipebomb",			 "pipebombammo",		"pipebombammo",			"No",	"PIPE", "PB Detonator"},
	{"det_satchelcharge",		 "satchelchargeammo",	"satchelchargeammo",	"No",	"STCHG",	"SC Detonator"},
	// Put all special weapons under this line (Fists, Dual weapons, Alternate Fire Modes, human shields, etc.)
	{"64Fist",          "NoPrimary",          	"NoSecondary", 			"No",	"FIST", "PlaceHolder"},
	{"Lasergun",				"Cell",					"NoSecondary",			"No",	"LASER",	"Laser Gun"},
	{"64RifleTactical",		"Clip",					"RifleAmmo",			"Yes",	"TRIFL", "Rifle"},
	{"64ShotgunTACTICAL",		"Shell",				"ShotgunAmmo",			"Yes",	"TSHOT",	"Shotgun"},
	{"64ChaingunTACTICAL",	"Clip",					"NoSecondary",			"No",	"TCGUN",	"Chaingun"},
	{"64RocketLauncherTactical", "RocketAmmo",		"NoSecondary",			"No",	"TRCKT",	"Rocket Launcher"},
	{"64PlasmaRifleTACTICAL",	"Cell",					"PlasmaRifleAmmo",		"Yes",	"TPLSM",	"Plasma Rifle"},
	{"GrenadeLauncher",       "RocketAmmo",         	"NoSecondary",  			"No",	"GRENL", "Grenade Launcher"}, //v20
	{"b_jawbone",			 	 "jawboneammo",			"NoSecondary",			"No",	"JAWB", "PlaceHolder"},
	};

/* #B64 */

/* B64_Tactical */
	#define BRUTAL64_TACTICAL_NumOfWeap	11
	#define BRUTAL64_TACTICAL_StandWeap 8 //Number of standard weapons to show in weaponslist

	// Weapons list - Columns descriptions are as follows:
	// 1st column ---> weapon.
	// 2nd column ---> primary ammo (put "NoPrimary" if the weapon doesn't use primary ammo).
	// 3rd column ---> secondary ammo (put "NoSecondary" if the weapon doesn't use secondary ammo).
	// 4th column ---> Shows Secondary Ammo Counter (put "Yes" if it does or "No" if the weapon doesn't show a unique secondary counter).
	// 5th column ---> Display name of weapon for Ammo Counter (Needs to be 5 or fewer characters to fit on display in all resolutions)
	// 6th column ---> Display name of weapon for Weapons list

	str BRUTAL64_TACTICAL_weaponslist[BRUTAL64_TACTICAL_NumOfWeap][6] =
	{
	// Put all regular weapons in order under this line
	{"64Chainsaw",              "SawGas",          	"NoSecondary", 			"No",	"SAW",	"Chain Saw"},
	{"64RifleTactical",		"Clip",					"RifleAmmo",			"Yes",	"TRIFL", "Rifle"},
	{"64ShotgunTACTICAL",		"Shell",				"ShotgunAmmo",			"Yes",	"TSHOT",	"Shotgun"},
	{"64SuperShotgun",                    "Shell",              	"NoSecondary",  		"No",	"SSG", "Super Shotgun"},
	{"64ChaingunTACTICAL",	"Clip",					"NoSecondary",			"No",	"TCGUN",	"Chaingun"},
	{"64RocketLauncherTactical", "RocketAmmo",		"NoSecondary",			"No",	"TRCKT",	"Rocket Launcher"},
	{"64PlasmaRifleTACTICAL",	"Cell",					"PlasmaRifleAmmo",		"Yes",	"TPLSM",	"Plasma Rifle"},
	{"64BFG9000",        "Cell",               	"NoSecondary",  		"No",	"BFG9K", "BFG 9000"},
	{"Unmaker",            "SoulAmmo",                	"NoSecondary",  		"No",	"UNMKR", "Unmaker"},
	// My pipebomb goes under this line, specifically for my pipebomb mod - doesn't affect normal display unless pipebomb mod is loaded.
	{"det_pipebomb",			 "pipebombammo",		"pipebombammo",			"No",	"PIPE", "PB Detonator"},
	{"det_satchelcharge",		 "satchelchargeammo",	"satchelchargeammo",	"No",	"STCHG",	"SC Detonator"},
	// Put all special weapons under this line (Fists, Dual weapons, Alternate Fire Modes, human shields, etc.)
	/*
	{"64Fist",          "NoPrimary",          	"NoSecondary", 			"No",	"FIST", "PlaceHolder"},
	{"64Pistol",                  "Clip",               	"NoSecondary",    		"No",	"PISTOL", "Pistol"},
	{"64Shotgun",               "Shell",              	"NoSecondary",  		"No",	"SHOT", "Shotgun"},
	{"64Chaingun",               "Clip",               	"NoSecondary",  		"No",	"CHAIN", "Chaingun"},
	{"64Rifle",				"Clip",						"NoSecondary",			"No",	"RIFLE",	"Rifle"},
	{"64RocketLauncher",        "RocketAmmo",         	"NoSecondary", 		"No",	"RCKTL", "Rocket Launcher"},
	{"64PlasmaRifle",             "Cell",               	"NoSecondary",   		"No",	"PLSMA", "Plasma Rifle"},
	{"Lasergun",				"Cell",					"NoSecondary",			"No",	"LASER",	"Laser Gun"},
	{"GrenadeLauncher",       "RocketAmmo",         	"NoSecondary",  			"No",	"GRENL", "Grenade Launcher"}, //v20
	{"b_jawbone",			 	 "jawboneammo",			"NoSecondary",			"No",	"JAWB", "PlaceHolder"},
	*/
	};

/* #B64_Tactical */

/* PB203 */
	#define PB203_EXTWEAP 2 // Number of special circumstance weapons (Pipebombs and Satchel Charge)

	#define PB203_NumOfWeap	72
	#define PB203_StandWeap 25 //Number of standard weapons to show in weaponslist


	// Weapons list - Columns descriptions are as follows:
	// 1st column ---> weapon.
	// 2nd column ---> primary ammo (put "NoPrimary" if the weapon doesn't use primary ammo).
	// 3rd column ---> secondary ammo (put "NoSecondary" if the weapon doesn't use secondary ammo).
	// 4th column ---> Shows Secondary Ammo Counter (put "Yes" if it does or "No" if the weapon doesn't show a unique secondary counter).
	// 5th column ---> Display name of weapon for Ammo Counter (Needs to be 5 or fewer characters to fit on display in all resolutions)

	str PB203_weaponslist[PB203_NumOfWeap][6] =
	{
	//{"Sledge",				 "NoPrimary",		   "NoSecondary", "No",				"SLEDG", "Sledge"},//	0
	{"Chain_Saw",              "NoPrimary",          "NoSecondary", "No",				"SAW", "Chain Saw"},//	0
	{"BDPistol",           "PistolBullets",               "PistolAmmo", "Yes",		"B950", "Pistol"},//	3
	{"Revolver",				"PistolBullets",				"RevolverAmmo","Yes",	"RVLVR", "Revolver"},//	2
	{"CompactSMG",			"PistolBullets",		"SMGAmmo", "Yes",				"SMG", "Compact SMG"},//	1
	{"Shot_Gun",               "NewShell",              "ShotgunAmmo",  "Yes",			"SHOT", "Shotgun"},//	5
	{"SSG",                    "NewShell",              "SSGAmmoCounter",  "Yes",		"SSG", "Sawed-Off"},//	6
	{"AutoShotgun",			"NewShell",			"AutoShotgunAmmo", "Yes",			"AUTO", "Auto Shotgun"},//	4
	{"Rifle",                  "NewClip",               "RifleAmmo", "Yes",			"UAC30", "UAC30 DMR"},//	10
	{"Mini_Gun",               "NewClip",               "NoSecondary", "No",			"MINI", "Minigun"},//	8
	{"Carbine",				"NewClip",				"XRifleAmmo",	"Yes",			"UAC41", "UAC41 Carbine"},//	9
	{"LMG",                  "NewClip",               "LMGAmmo", "Yes",			"UC349", "UAC349 LMG"},//	10
	{"HMG",					"NewClip",				"HMGAmmo", "Yes",			"HMG", "Heavy Machine Gun"},//	7
	{"Grenade_Launcher",       "HighExplosiveGrenadeRounds",         "NoSecondary",  "No",				"GRENL", "Grenade Launcher"},//	12
	{"Super_Grenade_Launcher", "SpecialGrenadeRounds",			"GrenadeRounds", "Yes",			"IMPCT", "Super G Launcher"},//	11
	{"Rocket_Launcher",        "RocketAmmo",         "RocketRounds", "Yes",			"RCKTL", "Rocket Launcher"},//	13
	{"Plasma_Gun",             "Cell",               "PlasmaAmmo",   "Yes",			"PLSMA", "Plasma Rifle"},//	15
	{"M2PlasmaRifle",			"Cell",					"M2PlasmaAmmo", "Yes",			"PLSM2", "M2 Plasma Rifle"},//	14
	{"Rail_Gun",               "Cell",               "RailgunAmmo",  "Yes",			"RAIL", "Rail Gun"},//	16
	{"FreezerRifle",			"Cell",					"FreezerAmmo", "Yes",			"FMISL", "Freezer Rifle"},//	17
	{"BHGEN",					"Cell",					"Cell",		"No",				"BHGEN", "Black Hole Gen"},//	18
	{"PlasmaBeam",			"Cell",					"NoSecondary", "No",			"BM11K", "BFG Beam 11K"},//	19
	{"BIG_FUCKING_GUN_MKIV",        "Cell",               "NoSecondary",  "No",			"BFG9K", "BFG9K MKIV"},//	20
	{"HellishMissileLauncher", "MiniHellRocketAmmo", "MiniHellRocketAmmo",  "No",		"HELL", "Revenant Launcher"},//	21
	{"FlameCannon",            "Gas",                "NoSecondary",  "No",			"FLAME", "Flame Cannon"},//	22
	{"Hell_rifle",			"DemonPower",			"HellAmmo", "Yes",				"HRIFL", "Hell Rifle"},//	23
	//{"Quad_SSG",				"NewShell",				"NoSecondary", "No",			"QUAD", "Quad-Barrel"},//	25
	{"SecretWeapon_MP40",      "NewClip",               "MP40Ammo",  "Yes",				"MP40", "MP40"},//	24
	// My pipebomb goes under this line, specifically for my pipebomb mod - doesn't affect normal display unless pipebomb mod is loaded.
	{"det_pipebomb",			 "pipebombammo",		"pipebombammo",			"No",	"PIPE", "Detonator"},// 25 - For my Pipebombs mod
	{"det_satchelcharge",		 "satchelchargeammo",	"satchelchargeammo",	"No",	"STCHG",	"SC Detonator"},
	// Put all special weapons under this line (Fists, Dual weapons, Alternate Fire Modes, human shields, etc.)
	{"Melee_Attacks",          "NoPrimary",          "NoSecondary", "No",				"FIST", "PlaceHolder"},//	26 -1
	{"ImpShield",				 "Meatshieldgunammo",	"MeatAmmo",				"No",	"UAC30", "PlaceHolder"},// 27 -2
	{"ZmanShield",			 "Meatshieldgunammo",	"MeatAmmo",				"No",	"UAC30", "PlaceHolder"},// 28 -3
	{"SguyShield",			 "Meatshieldgunammo",	"MeatAmmo",				"No",	"UAC30", "PlaceHolder"},// 29 -4
	{"b_jawbone",			 	 "jawboneammo",			"NoSecondary",			"No",	"JAWB", "PlaceHolder"},// 30 -5
	{"HasFragmentation",		 "RocketAmmo",			"NoSecondary",			"No",	"FRAG", "PlaceHolder"},// 31 -6
	{"DualMagnums",			"PistolBullets",		"AkimboAMmo",	"Yes",			"DUALR", "PlaceHolder"},// 32 -7
	{"DualAutoShotguns",		 "NewShell",			"DoubleASGAmmo",			"Yes",	"DUALA", "PlaceHolder"},// 33 -8
	{"DualSSG",				"NewShell",				"DualSSGAmmo",			"Yes",	"DUALS", "PlaceHolder"},// 34 -9
	{"DualRifles",			"NewClip",				"DoubleRifleAmmo",		"Yes",	"DUALU", "PlaceHolder"},// 35 -10
	{"DualCarbines",			"NewClip",				"DoubleCarbineAmmo",	"Yes",	"DUALC", "PlaceHolder"},// 36 -11
	{"DualPlasmaRifles",		"Cell",					"DoublePlasmaGunAmmo",		"Yes",	"DLPLS", "PlaceHolder"},// 37 -12
	{"DualM2PlasmaRifles",	"Cell",					"DoubleM2PlasmaGunAmmo",	"Yes",	"DLPM2", "PlaceHolder"},// 38 -13
	{"Handgun",				"PistolBullets",				"HandgunAmmo", "Yes",	"DUALP", "PlaceHolder"},//	39 -14
	{"HasSlugs",				"NewShell",				"ShotgunAmmo",			"Yes",	"SLUG", "PlaceHolder"},// 40 -15
	{"SilencerEquipped",		"PistolBullets",		"PistolAmmo",			"Yes",	"B950S", "PlaceHolder"},// 41 -16
	{"EquipDeathDealer",		"NewClip",				"NoSecondary",			"No",	"TPLMG", "PlaceHolder"},// 42 -17
	{"HasRailGun",			"MiniHellRocketAmmo",	"MiniHellRocketAmmo",	"No",	"HRAIL", "PlaceHolder"},//	43 -18
	{"DaedabusSlimeSelected",	"Gas",					"NoSecondary",	"No",			"SLIME", "PlaceHolder"},//	44 -19
	{"FireModeFreezerBeam",	"Cell",					"FreezerAmmo",	"Yes",			"FRZRY", "PlaceHolder"},//	45 -20
	{"Super_Grenade_Launcher_LVG", "SpecialGrenadeRounds",			"GrenadeRounds", "Yes",		"STCKY", "PlaceHolder"},//	46 -21
	{"Super_Grenade_Launcher_Incendiary", "SpecialGrenadeRounds",		"GrenadeRounds", "Yes",	"INCEN", "PlaceHolder"},//	47 -22
	{"Super_Grenade_Launcher_Cryo", "SpecialGrenadeRounds",			"GrenadeRounds", "Yes",		"CRYO", "PlaceHolder"},//	48 -23
	{"Super_Grenade_Launcher_Acid", "SpecialGrenadeRounds",			"GrenadeRounds", "Yes",		"ACID", "PlaceHolder"},//	49 -24
	{"InfraredActivated",               "Cell",               "RailgunAmmo",  "Yes",			"INFRD", "PlaceHolder"},//	50 -25
	{"BFGGuardMode",        "Cell",               "NoSecondary",  "No",			"GUARD", "PlaceHolder"},//	51 -26
	{"BFGLaserMode",        "Cell",               "NoSecondary",  "No",			"LASER", "PlaceHolder"},//	52 -27
	{"FireModeAcidGun",			"DemonPower",			"HellAmmo", "Yes",				"CAUST", "PlaceHolder"},//	53 -28
	{"EquippedExplosiveRounds",	"NewClip",			"HMGAmmo",	"Yes",	"FMJ",		"PlaceHolder"},//	54 -29
	{"VanillaRifle",           "NewClip",               	"VanillaRifleAmmo",    		"Yes",	"Rifle", "PlaceHolder"}, //55 -30
	{"DualVanillaRifles",			"NewClip",				"DoubleVanillaRifleAmmo",		"Yes",	"DLAR", "PlaceHolder"},// 56 -31
	{"Vanilla_Mini_Gun",               "NewClip",               "NoSecondary", "No",			"MINI", "Minigun"},//	8 -32
	{"Vanilla_SSG",               "NewShell",               "SSGAmmoCounter2", "Yes",			"SSG", "Coach Gun"},//	57 -33
	{"BIG_FUCKING_GUN",        "Cell",               "NoSecondary",  "No",			"BFG9K", "BFG 9000"},//	20 -34
	{"Traditional_Fist",        "NoPrimary",               "NoSecondary",  "No",			"FIST", "PlaceHolder"},//	58 -35
	{"Traditional_Chainsaw",        "NoPrimary",               "NoSecondary",  "No",			"SAW", "Chain Saw"},//	65 -36
	{"Traditional_Pistol",         "NewClip",               "NoSecondary",  "No",			"9MM", "9mm Pistol"},//	58 -37
	{"Traditional_Shotgun",        "NewShell",               "NoSecondary",  "No",			"SHOT", "Shotgun"},//	59 -38
	{"Traditional_SSG",       	 "NewShell",               "NoSecondary",  "No",			"SSG", "Super Shotgun"},//	60 -39
	{"Traditional_ChainGun",       "NewClip",               "NoSecondary",  "No",			"CHAIN", "Chain Gun"},//	61 -40
	{"Traditional_RocketLauncher",       "RocketAmmo",               "NoSecondary",  "No",			"RCKTL", "Rocket Launcher"},//	62 -41
	{"Traditional_PlasmaRifle",       "Cell",               "NoSecondary",  "No",			"PLSMA", "Plasma Gun"},//	63 -42
	{"Traditional_BFG",       "Cell",               "NoSecondary",  "No",			"BFG9K", "BFG 9000"},//	64 -43
	{"HasDragonBreath",	"NewShell",				"NoSecondary", "No",		"DRGNB", "PLACEHOLDER"}, // -44
	};

/* #PB203 */

/* B20 */

	#define BRUTALV20_NumOfWeap	32
	#define BRUTALV20_StandWeap 10 //Number of standard weapons to show in weaponslist

	// Weapons list - Columns descriptions are as follows:
	// 1st column ---> weapon.
	// 2nd column ---> primary ammo (put "NoPrimary" if the weapon doesn't use primary ammo).
	// 3rd column ---> secondary ammo (put "NoSecondary" if the weapon doesn't use secondary ammo).
	// 4th column ---> Shows Secondary Ammo Counter (put "Yes" if it does or "No" if the weapon doesn't show a unique secondary counter).
	// 5th column ---> Display name of weapon for Ammo Counter (Needs to be 5 or fewer characters to fit on display in all resolutions)
	// 6th column ---> Display name of weapon for Weapons list

	str BRUTALV20_weaponslist[BRUTALV20_NumOfWeap][7] =
	{
	{"Chain_Saw",              "NoPrimary",          	"NoSecondary", 			"No",	"SAW", "Chain Saw"},
	{"Rifle",                  "Clip2",               	"RifleAmmo",    		"Yes",	"RIFLE", "Assault Rifle"},
	{"Shot_Gun",               "Shell",              	"ShotgunAmmo",  		"Yes",	"SHOT", "Shotgun"},
	{"SSG",                    "Shell",              	"SSGAmmo",  		"Yes",	"SSG", "Super Shotgun"},
	{"MiniGun",               "Clip2",               	"NoSecondary",  		"No",	"MINI", "Mini Gun"},
	//  {"GrenadeLauncher",       "RocketAmmo",         	"NoSecondary",  			"No",	"GRENL", "Grenade Launcher"}, //v20
	{"Rocket_Launcher",        "RocketAmmo",         	"RocketRounds", 		"Yes",	"RCKTL", "Rocket Launcher"},
	//  {"Rail_Gun",               "Cell",               	"RailgunAmmo",  		"Yes",	"RAIL", "Rail Gun"},
	{"Plasma_Gun",             "Cell",               	"PlasmaAmmo",   		"Yes",	"PLSMA", "Plasma Gun"},
	//  {"BFG10000",				 "Cell",				"NoSecondary", 			"No",	"BFG10", "BFG 10000"},
	{"BIG_FUCKING_GUN",        "Cell",               	"NoSecondary",  		"No",	"BFG9K", "BFG 9000"},
	{"HellishMissileLauncher", "MiniHellRocketAmmo", 	"MiniHellRocketAmmo",  	"No",	"HELL", "Revenant Launcher"},
	{"FlameCannon",            "Gas",                	"NoSecondary",  		"No",	"FLAME", "Flame Cannon"},
	{"MP40",      "Clip2",               	"MP40Ammo",  				"Yes",	"MP40", "MP40"},
	// My pipebomb AND satchel charge goes under this line, specifically for my pipebomb mod - doesn't affect normal display unless pipebomb mod is loaded.
	{"det_pipebomb",			 "pipebombammo",		"pipebombammo",			"No",	"PIPE", "PB Detonator"},
	{"det_satchelcharge",		 "satchelchargeammo",	"satchelchargeammo",	"No",	"STCHG",	"SC Detonator"},
	// Put all special weapons under this line (Fists, Dual weapons, Alternate Fire Modes, human shields, etc.)
	{"HandGrenades",      "GrenadeAmmo",         	"NoSecondary",  				"No",	"FRAG", "PlaceHolder"},
	{"Melee_Attacks",          "NoPrimary",          	"NoSecondary", 			"No",	"FIST", "PlaceHolder"},
	{"DualRifles",			 "Clip2",				"DoubleRifleAmmo",		"Yes",	"DRIFL", "PlaceHolder"}, //v20
	{"BrutalPistol",			 "Clip",				"BDPistolAmmo",			"Yes",	"PISTL", "PlaceHolder"},
	{"Grenade_Launcher",       "RocketAmmo",         	"NoSecondary",  			"No",	"GRENL", "PlaceHolder"}, //v19 backwards compatibility
	{"DualPlasmaRifles",		 "Cell",				"DoublePlasmagunAmmo",	"Yes",	"DPLSM", "PlaceHolder"}, //v20
	{"ImpShield",				 "Meatshieldgunammo",	"MeatAmmo",				"No",	"RIFLE", "PlaceHolder"},
	{"ZmanShield",			 "Meatshieldgunammo",	"MeatAmmo",				"No",	"RIFLE", "PlaceHolder"},
	{"SguyShield",			 "Meatshieldgunammo",	"MeatAmmo",				"No",	"RIFLE", "PlaceHolder"},
	{"ClassicFist",          "NoPrimary",          	"NoSecondary", 			"No",	"FIST", "PlaceHolder"},
	{"ClassicSaw",              "NoPrimary",          	"NoSecondary", 			"No",	"SAW", "Chain Saw"},
	{"ClassicPistol",                  "Clip2",               	"NoSecondary",    		"No",	"PISTL", "Pistol"},
	{"ClassicShotgun",               "Shell",              	"NoSecondary",  		"No",	"SHOT", "Shotgun"},
	{"ClassicSSG",                    "Shell",              	"NoSecondary",  		"No",	"SSG", "Super Shotgun"},
	{"ClassicChaingun",               "Clip2",               	"NoSecondary",  		"No",	"CHGUN", "Chain Gun"},
	{"ClassicRocketLauncher",       "RocketAmmo",         	"NoSecondary",  			"No",	"RCKTL", "Rocket Launcher"}, //v20
	{"ClassicPlasmaRifle",        "RocketAmmo",         	"NoSecondary", 		"No",	"PLSMA", "Plasma Rifle"},
	{"VanillaBFG9000",        "Cell",               	"NoSecondary",  		"No",	"BFG9K", "BFG 9000"},
	{"b_jawbone",			 	 "jawboneammo",			"NoSecondary",			"No",	"JAWB", "PlaceHolder"},
	};

/* #B20 */

/* SMOOTH */
	#define SMOOTH_NumOfWeap	12
	#define SMOOTH_StandWeap 8 //Number of standard weapons to show in weaponslist

	// Weapons list - Columns descriptions are as follows:
	// 1st column ---> weapon.
	// 2nd column ---> primary ammo (put "NoPrimary" if the weapon doesn't use primary ammo).
	// 3rd column ---> secondary ammo (put "NoSecondary" if the weapon doesn't use secondary ammo).
	// 4th column ---> Shows Secondary Ammo Counter (put "Yes" if it does or "No" if the weapon doesn't show a unique secondary counter).
	// 5th column ---> Display name of weapon for Ammo Counter (Needs to be 5 or fewer characters to fit on display in all resolutions)
	// 6th column ---> Display name of weapon for Weapons list

	str SMOOTH_weaponslist[SMOOTH_NumOfWeap][6] =
	{
	{"Z86Chainsaw",              	"NoPrimary",        "NoSecondary", "No",	"SAW", "Chain Saw"},
	{"PerkPistol",           			"Clip",             "NoSecondary", "No",	"PISTL", "Pistol"},
	{"Rifle",                  	"Clip",            "NoSecondary", "No",	"RIFLE", "Rifle"},
	{"PerkShotgun",              "Shell",            "NoSecondary", "No",	"SHOT", "Shotgun"},
	{"PerkSuperShotgun",                  "Shell",             "NoSecondary", "No",	"SSG", "Super Shotgun"},
	{"Z86Chaingun",			"Clip",		"NoSecondary", "No",	"CHAIN", "Chaingun"},
	{"PerkRocketLauncher",               "RocketAmmo",             "NoSecondary", "No",	"ROCKT", "Rocket Launcher"},
	{"BloxPlasmaRifle",       			"Cell",        		"NoSecondary", "No",	"PLSMA", "Plasma Rifle"},
	{"Z86BFG9000",       			"Cell",        		"NoSecondary", "No",	"BFG9K", "BFG 9000"},
	// My pipebomb goes under this line, specifically for my pipebomb mod - doesn't affect normal display unless pipebomb mod is loaded.
	{"det_pipebomb",			 "pipebombammo",		"pipebombammo",			"No",	"PIPE", "PB Detonator"},
	{"det_satchelcharge",		 "satchelchargeammo",	"satchelchargeammo",	"No",	"STCHG",	"SC Detonator"},
	// Put all special weapons under this line (Fists, Dual weapons, Alternate Fire Modes, human shields, etc.)
	{"PerkFist",		          		"NoPrimary",        "NoSecondary", "No",	"FIST", "PlaceHolder"},
	};

/* #SMOOTH */

/* #Weapon Arrays */

/* AMMO Count Functions */
Function void AmmoBarForHUD (str ammotype, str ammoempty, str ammoverylow, str ammolow, str ammogood)
{
	// Store ammo type's current amount in a variable as a percentage
	int sae_ammoper = CheckInventory(ammotype) * 100 / GetAmmoCapacity(ammotype);

	If(ammotype == "PlasmaHeat") //for Johnny Doom
	{
		If(sae_ammoper >= 0 && sae_ammoper < 60) GiveInventory(ammogood,1);
		Else If(sae_ammoper >= 60 && sae_ammoper < 80) GiveInventory(ammolow,1);
		Else If (sae_ammoper >=80) GiveInventory(ammoverylow,1);
	}
	Else
	{
	If(CheckInventory(ammotype) == D_AMMOEMPTY)
	{
		GiveInventory(ammoverylow, 1);
		GiveInventory(ammoempty, 1);
	}
	Else If(sae_ammoper <= D_AMMOVERYLOW && sae_ammoper > D_AMMOEMPTY) GiveInventory(ammoverylow, 1);
	Else If(sae_ammoper >= D_AMMOVERYLOW && sae_ammoper < D_AMMOLOW) GiveInventory(ammolow, 1);
	Else If(sae_ammoper >= D_AMMOLOW) GiveInventory(ammogood, 1);
	}
  
}

Function void GetEquippedWeaponAndAmmo (void)
{
	int i;
	If(GetUserCVAR(PlayerNumber(), "udv_disableweapon"))//disableweapon
	{
		For(i=0; i < NONE_NumOfWeap; i++)
		{
			If(CheckWeapon(NONE_weaponslist[i][0]))
			{
				GiveInventory("sae_known", 1);
				sae_WNAME[PlayerNumber()] = NONE_weaponslist[i][4];
				sae_SecAmmoCap[PlayerNumber()] = GetAmmoCapacity(NONE_weaponslist[i][2]);
				If ( sae_SecAmmoCap[PlayerNumber()] > 2 ) GiveInventory("UDV_SecAmmoCap", 1);
				Else TakeInventory("UDV_SecAmmoCap", 1);
				AmmoBarForHUD(NONE_weaponslist[i][1], "sae_PAE", "sae_PrimaryAmmoVeryLow", "sae_PrimaryAmmoLow", "sae_PrimaryAmmoOk");
				AmmoBarForHUD(NONE_weaponslist[i][2], "sae_SAE", "sae_SecondaryAmmoVeryLow", "sae_SecondaryAmmoLow", "sae_SecondaryAmmoOk");
				
				If((NONE_weaponslist[i][3]) == "Yes") GiveInventory("sae_Secondary", 1);
				Else TakeInventory("sae_Secondary", 1);

				If( NONE_weaponslist[i][1] == "NoPrimary" ) 
				{
					GiveInventory("sae_Melee", 1);
				}
				Else
				{
					TakeInventory("sae_Melee", 1);
				}

				Break;
			}
			Else
			{
				TakeInventory("sae_known", 1);
				sae_WNAME[PlayerNumber()] = StrLeft(GetWeapon(), 10);
			}
		}
	}
	Else
	{
		If(is_vanilla)
		{
			For(i=0; i < VANILLA_NumOfWeap; i++)
			{
				If(CheckWeapon(VANILLA_weaponslist[i][0]))
				{
					GiveInventory("sae_known", 1);
					sae_WNAME[PlayerNumber()] = VANILLA_weaponslist[i][4];
					sae_SecAmmoCap[PlayerNumber()] = GetAmmoCapacity(VANILLA_weaponslist[i][2]);
					If ( sae_SecAmmoCap[PlayerNumber()] > 2 ) GiveInventory("UDV_SecAmmoCap", 1);
					Else TakeInventory("UDV_SecAmmoCap", 1);
					AmmoBarForHUD(VANILLA_weaponslist[i][1], "sae_PAE", "sae_PrimaryAmmoVeryLow", "sae_PrimaryAmmoLow", "sae_PrimaryAmmoOk");
					AmmoBarForHUD(VANILLA_weaponslist[i][2], "sae_SAE", "sae_SecondaryAmmoVeryLow", "sae_SecondaryAmmoLow", "sae_SecondaryAmmoOk");
					
					If((VANILLA_weaponslist[i][3]) == "Yes") GiveInventory("sae_Secondary", 1);
					Else TakeInventory("sae_Secondary", 1);

					If( VANILLA_weaponslist[i][1] == "NoPrimary" ) 
					{
						GiveInventory("sae_Melee", 1);
					}
					Else
					{
						TakeInventory("sae_Melee", 1);
					}

					Break;
				}
				Else
				{
					TakeInventory("sae_known", 1);
					sae_WNAME[PlayerNumber()] = StrLeft(GetWeapon(), 10);
				}
			  }
		}
		Else If(is_brutalv21)
		{
			For(i=0; i < BDV21_NumOfWeap; i++)
			{
				If(CheckWeapon(BDV21_weaponslist[i][0]))
				{
					GiveInventory("sae_known", 1);
					sae_WNAME[PlayerNumber()] = BDV21_weaponslist[i][4];
					sae_SecAmmoCap[PlayerNumber()] = GetAmmoCapacity(BDV21_weaponslist[i][2]);
					If ( sae_SecAmmoCap[PlayerNumber()] > 2 ) GiveInventory("UDV_SecAmmoCap", 1);
					Else TakeInventory("UDV_SecAmmoCap", 1);
					AmmoBarForHUD(BDV21_weaponslist[i][1], "sae_PAE", "sae_PrimaryAmmoVeryLow", "sae_PrimaryAmmoLow", "sae_PrimaryAmmoOk");
					AmmoBarForHUD(BDV21_weaponslist[i][2], "sae_SAE", "sae_SecondaryAmmoVeryLow", "sae_SecondaryAmmoLow", "sae_SecondaryAmmoOk");
					
					If((BDV21_weaponslist[i][3]) == "Yes") GiveInventory("sae_Secondary", 1);
					Else TakeInventory("sae_Secondary", 1);

					If( BDV21_weaponslist[i][1] == "NoPrimary" ) 
					{
						GiveInventory("sae_Melee", 1);
					}
					Else
					{
						TakeInventory("sae_Melee", 1);
					}

					Break;
				}
				Else
				{
					TakeInventory("sae_known", 1);
					sae_WNAME[PlayerNumber()] = StrLeft(GetWeapon(), 10);
				}
			  }
		}//End is_brutalv21
		Else If(is_PB3)
		{
			int UDVWeaponTotalPB3 = PB_StandWeap + UAC_EXP_WEAPONS;
			For(i=0; i < PB_NumOfWeap; i++)
			{
				If(CheckWeapon(PB_weaponslist[i][0]))
				{
					GiveInventory("sae_known", 1);
					// Setting Weapons Short Title
					sae_WNAME[PlayerNumber()] = PB_weaponslist[i][4];

					If(CheckInventory("GrenadeTypeLVG") && CheckWeapon("Super_Grenade_Launcher") )
					{
						sae_WNAME[PlayerNumber()] = PB_weaponslist[UDVWeaponTotalPB3 + 21][4];
					}
					// Else If( CheckInventory("GrenadeTypeIncendiary") && CheckWeapon("Super_Grenade_Launcher") )
					// {
					// 	sae_WNAME[PlayerNumber()] = PB_weaponslist[UDVWeaponTotalPB3 + 22][4];
					// }
					// Else If(CheckInventory("GrenadeTypeCryo") && CheckWeapon("Super_Grenade_Launcher") )
					// {
					// 	sae_WNAME[PlayerNumber()] = PB_weaponslist[UDVWeaponTotalPB3 + 23][4];
					// }
					// Else If(CheckInventory("GrenadeTypeAcid") && CheckWeapon("Super_Grenade_Launcher") )
					// {
					// 	sae_WNAME[PlayerNumber()] = PB_weaponslist[UDVWeaponTotalPB3 + 24][4];
					// }
					// Else If(CheckInventory("FiremodeFreezerBeam") && CheckWeapon("FreezerRifle") )
					// {
					// 	sae_WNAME[PlayerNumber()] = PB_weaponslist[UDVWeaponTotalPB3 + 20][4];
					// }
					// Else If(CheckInventory("HasRailGun") && CheckWeapon("HellishMissileLauncher") )
					// {
					// 	sae_WNAME[PlayerNumber()] = PB_weaponslist[UDVWeaponTotalPB3 + 18][4];
					// }
					// Else If(CheckInventory("DaedabusSlimeSelected") && CheckWeapon("FlameCannon") )
					// {
					// 	sae_WNAME[PlayerNumber()] = PB_weaponslist[UDVWeaponTotalPB3 + 19][4];
					// }
					// Else If(CheckInventory("HasFragmentation") && CheckWeapon("Grenade_Launcher") )
					// {
					// 	sae_WNAME[PlayerNumber()] = PB_weaponslist[UDVWeaponTotalPB3 + 6][4];
					// }
					// Else If(CheckInventory("HasSlugs") && CheckWeapon("Shot_Gun") )
					// {
					// 	sae_WNAME[PlayerNumber()] = PB_weaponslist[UDVWeaponTotalPB3 + 15][4];
					// }
					// Else If(CheckInventory("SilencerEquipped") && CheckWeapon("BDPistol") )
					// {
					// 	sae_WNAME[PlayerNumber()] = PB_weaponslist[UDVWeaponTotalPB3 + 16][4];
					// }
					// Else If(CheckInventory("EquipDeathDealer") && CheckWeapon("Mini_Gun") )
					// {
					// 	sae_WNAME[PlayerNumber()] = PB_weaponslist[UDVWeaponTotalPB3 + 17][4];
					// }
					// Else If(CheckInventory("InfraredActivated") && CheckWeapon("Rail_gun") )
					// {
					// 	sae_WNAME[PlayerNumber()] = PB_weaponslist[UDVWeaponTotalPB3 + 25][4];
					// }
					// Else If(CheckInventory("BFGGuardMode") && CheckWeapon("BIG_FUCKING_GUN_MKIV") )
					// {
					// 	sae_WNAME[PlayerNumber()] = PB_weaponslist[UDVWeaponTotalPB3 + 26][4];
					// }
					// Else If(CheckInventory("BFGLaserMode") && CheckWeapon("BIG_FUCKING_GUN_MKIV") )
					// {
					// 	sae_WNAME[PlayerNumber()] = PB_weaponslist[UDVWeaponTotalPB3 + 27][4];
					// }
					// Else If(CheckInventory("FireModeAcidGun") && CheckWeapon("Hell_rifle") )
					// {
					// 	sae_WNAME[PlayerNumber()] = PB_weaponslist[UDVWeaponTotalPB3 + 28][4];
					// }
					// Else If( CheckInventory("EquippedNailRounds") && CheckWeapon("HMG") )
					// {
					// 	sae_WNAME[PlayerNumber()] = PB_weaponslist[UDVWeaponTotalPB3 + 29][4];
					// }
					// Else If(CheckInventory("HasDragonBreath") && CheckWeapon("Shot_Gun") )
					// {
					// 	sae_WNAME[PlayerNumber()] = PB_weaponslist[UDVWeaponTotalPB3 + 44][4];
					// }
					// Else If(CheckInventory("DropShotMode") && CheckWeapon("Excavator") )
					// {
					// 	sae_WNAME[PlayerNumber()] = PB_weaponslist[UDVWeaponTotalPB3 + 45][4];
					// }

					sae_SecAmmoCap[PlayerNumber()] = GetAmmoCapacity(PB_weaponslist[i][2]);
					If ( sae_SecAmmoCap[PlayerNumber()] > 2 ) GiveInventory("UDV_SecAmmoCap", 1);
					Else TakeInventory("UDV_SecAmmoCap", 1);

					AmmoBarForHUD(PB_weaponslist[i][1], "sae_PAE", "sae_PrimaryAmmoVeryLow", "sae_PrimaryAmmoLow", "sae_PrimaryAmmoOk");
					AmmoBarForHUD(PB_weaponslist[i][2], "sae_SAE", "sae_SecondaryAmmoVeryLow", "sae_SecondaryAmmoLow", "sae_SecondaryAmmoOk");

					If((PB_weaponslist[i][3]) == "Yes") GiveInventory("sae_Secondary", 1);
					Else TakeInventory("sae_Secondary", 1);

					If( PB_weaponslist[i][1] == "NoPrimary" ) GiveInventory("sae_Melee", 1);
					Else 
					Break;
				}
				Else
				{
					TakeInventory("sae_known", 1);
					sae_WNAME[PlayerNumber()] = StrLeft(GetWeapon(), 10);
				}
			}
		}
		Else If (is_BPV9)
		{
			For(i=0; i < BP_NumOfWeap; i++)
			{
				If(CheckWeapon(BP_weaponslist[i][0]))
				{
					GiveInventory("sae_known", 1);
					sae_WNAME[PlayerNumber()] = BP_weaponslist[i][4];
					sae_SecAmmoCap[PlayerNumber()] = GetAmmoCapacity(BP_weaponslist[i][2]);
					If ( sae_SecAmmoCap[PlayerNumber()] > 2 ) GiveInventory("UDV_SecAmmoCap", 1);
					Else TakeInventory("UDV_SecAmmoCap", 1);
					AmmoBarForHUD(BP_weaponslist[i][1], "sae_PAE", "sae_PrimaryAmmoVeryLow", "sae_PrimaryAmmoLow", "sae_PrimaryAmmoOk");
					AmmoBarForHUD(BP_weaponslist[i][2], "sae_SAE", "sae_SecondaryAmmoVeryLow", "sae_SecondaryAmmoLow", "sae_SecondaryAmmoOk");
					
					If((BP_weaponslist[i][3]) == "Yes") GiveInventory("sae_Secondary", 1);
					Else TakeInventory("sae_Secondary", 1);

					If( BP_weaponslist[i][1] == "NoPrimary" ) 
					{
						GiveInventory("sae_Melee", 1);
					}
					Else
					{
						TakeInventory("sae_Melee", 1);
					}

					Break;
				}
				Else
				{
					TakeInventory("sae_known", 1);
					sae_WNAME[PlayerNumber()] = StrLeft(GetWeapon(), 10);
				}
			}
		}
		Else If (is_johnny)
		{
			For(i=0; i < JOHNNY_NumOfWeap; i++)
			{
				If(CheckWeapon(JOHNNY_weaponslist[i][0]))
				{
					GiveInventory("sae_known", 1);
					sae_WNAME[PlayerNumber()] = JOHNNY_weaponslist[i][4];
					sae_SecAmmoCap[PlayerNumber()] = GetAmmoCapacity(JOHNNY_weaponslist[i][2]);
					If ( sae_SecAmmoCap[PlayerNumber()] > 2 ) GiveInventory("UDV_SecAmmoCap", 1);
					Else TakeInventory("UDV_SecAmmoCap", 1);
					AmmoBarForHUD(JOHNNY_weaponslist[i][1], "sae_PAE", "sae_PrimaryAmmoVeryLow", "sae_PrimaryAmmoLow", "sae_PrimaryAmmoOk");
					AmmoBarForHUD(JOHNNY_weaponslist[i][2], "sae_SAE", "sae_SecondaryAmmoVeryLow", "sae_SecondaryAmmoLow", "sae_SecondaryAmmoOk");
					
					If((JOHNNY_weaponslist[i][3]) == "Yes") GiveInventory("sae_Secondary", 1);
					Else TakeInventory("sae_Secondary", 1);

					If( JOHNNY_weaponslist[i][1] == "NoPrimary" ) 
					{
						GiveInventory("sae_Melee", 1);
					}
					Else
					{
						TakeInventory("sae_Melee", 1);
					}

					Break;
				}
				Else
				{
					TakeInventory("sae_known", 1);
					sae_WNAME[PlayerNumber()] = StrLeft(GetWeapon(), 10);
				}
			}
		}
		Else If(is_brutal64)
		{
			For(i=0; i < BRUTAL64_NumOfWeap; i++)
			{
				If(CheckWeapon(BRUTAL64_weaponslist[i][0]))
				{
					GiveInventory("sae_known", 1);
					sae_WNAME[PlayerNumber()] = BRUTAL64_weaponslist[i][4];
					sae_SecAmmoCap[PlayerNumber()] = GetAmmoCapacity(BRUTAL64_weaponslist[i][2]);
					If ( sae_SecAmmoCap[PlayerNumber()] > 2 ) GiveInventory("UDV_SecAmmoCap", 1);
					Else TakeInventory("UDV_SecAmmoCap", 1);
					AmmoBarForHUD(BRUTAL64_weaponslist[i][1], "sae_PAE", "sae_PrimaryAmmoVeryLow", "sae_PrimaryAmmoLow", "sae_PrimaryAmmoOk");
					AmmoBarForHUD(BRUTAL64_weaponslist[i][2], "sae_SAE", "sae_SecondaryAmmoVeryLow", "sae_SecondaryAmmoLow", "sae_SecondaryAmmoOk");
					
					If((BRUTAL64_weaponslist[i][3]) == "Yes") GiveInventory("sae_Secondary", 1);
					Else TakeInventory("sae_Secondary", 1);

					If( BRUTAL64_weaponslist[i][1] == "NoPrimary" ) 
					{
						GiveInventory("sae_Melee", 1);
					}
					Else
					{
						TakeInventory("sae_Melee", 1);
					}

					Break;
				}
				Else
				{
					TakeInventory("sae_known", 1);
					sae_WNAME[PlayerNumber()] = StrLeft(GetWeapon(), 10);
				}
			}
		}
		Else If(is_PB203)
		{
			int UDVWeaponTotalPB203 = PB203_StandWeap + PB203_EXTWEAP;
			For(i=0; i < PB203_NumOfWeap; i++)
			{
				If(CheckWeapon(PB203_weaponslist[i][0]))
				{
					GiveInventory("sae_known", 1);
					sae_WNAME[PlayerNumber()] = PB203_weaponslist[i][4];
					If(CheckInventory("GrenadeTypeLVG") && CheckWeapon("Super_Grenade_Launcher") )
					{
						sae_WNAME[PlayerNumber()] = PB203_weaponslist[UDVWeaponTotalPB203 + 21][4];
					}
					Else If( CheckInventory("GrenadeTypeIncendiary") && CheckWeapon("Super_Grenade_Launcher") )
					{
						sae_WNAME[PlayerNumber()] = PB203_weaponslist[UDVWeaponTotalPB203 + 22][4];
					}
					Else If(CheckInventory("GrenadeTypeCryo") && CheckWeapon("Super_Grenade_Launcher") )
					{
						sae_WNAME[PlayerNumber()] = PB203_weaponslist[UDVWeaponTotalPB203 + 23][4];
					}
					Else If(CheckInventory("GrenadeTypeAcid") && CheckWeapon("Super_Grenade_Launcher") )
					{
						sae_WNAME[PlayerNumber()] = PB203_weaponslist[UDVWeaponTotalPB203 + 24][4];
					}
					Else If(CheckInventory("FiremodeFreezerBeam") && CheckWeapon("FreezerRifle") )
					{
						sae_WNAME[PlayerNumber()] = PB203_weaponslist[UDVWeaponTotalPB203 + 20][4];
					}
					Else If(CheckInventory("HasRailGun") && CheckWeapon("HellishMissileLauncher") )
					{
						sae_WNAME[PlayerNumber()] = PB203_weaponslist[UDVWeaponTotalPB203 + 18][4];
					}
					Else If(CheckInventory("DaedabusSlimeSelected") && CheckWeapon("FlameCannon") )
					{
						sae_WNAME[PlayerNumber()] = PB203_weaponslist[UDVWeaponTotalPB203 + 19][4];
					}
					Else If(CheckInventory("HasFragmentation") && CheckWeapon("Grenade_Launcher") )
					{
						sae_WNAME[PlayerNumber()] = PB203_weaponslist[UDVWeaponTotalPB203 + 6][4];
					}
					Else If(CheckInventory("HasSlugs") && CheckWeapon("Shot_Gun") )
					{
						sae_WNAME[PlayerNumber()] = PB203_weaponslist[UDVWeaponTotalPB203 + 15][4];
					}
					Else If(CheckInventory("SilencerEquipped") && CheckWeapon("BDPistol") )
					{
						sae_WNAME[PlayerNumber()] = PB203_weaponslist[UDVWeaponTotalPB203 + 16][4];
					}
					Else If(CheckInventory("EquipDeathDealer") && CheckWeapon("Mini_Gun") )
					{
						sae_WNAME[PlayerNumber()] = PB203_weaponslist[UDVWeaponTotalPB203 + 17][4];
					}
					Else If(CheckInventory("InfraredActivated") && CheckWeapon("Rail_gun") )
					{
						sae_WNAME[PlayerNumber()] = PB203_weaponslist[UDVWeaponTotalPB203 + 25][4];
					}
					Else If(CheckInventory("BFGGuardMode") && CheckWeapon("BIG_FUCKING_GUN_MKIV") )
					{
						sae_WNAME[PlayerNumber()] = PB203_weaponslist[UDVWeaponTotalPB203 + 26][4];
					}
					Else If(CheckInventory("BFGLaserMode") && CheckWeapon("BIG_FUCKING_GUN_MKIV") )
					{
						sae_WNAME[PlayerNumber()] = PB203_weaponslist[UDVWeaponTotalPB203 + 27][4];
					}
					Else If(CheckInventory("FireModeAcidGun") && CheckWeapon("Hell_rifle") )
					{
						sae_WNAME[PlayerNumber()] = PB203_weaponslist[UDVWeaponTotalPB203 + 28][4];
					}
					Else If( CheckInventory("EquippedExplosiveRounds") && CheckWeapon("HMG") )
					{
						sae_WNAME[PlayerNumber()] = PB203_weaponslist[UDVWeaponTotalPB203 + 29][4];
					}
					Else If(CheckInventory("HasDragonBreath") && CheckWeapon("Shot_Gun") )
					{
						sae_WNAME[PlayerNumber()] = PB203_weaponslist[UDVWeaponTotalPB203 + 44][4];
					}

					sae_SecAmmoCap[PlayerNumber()] = GetAmmoCapacity(PB203_weaponslist[i][2]);
					If ( sae_SecAmmoCap[PlayerNumber()] > 2 ) GiveInventory("UDV_SecAmmoCap", 1);
					Else TakeInventory("UDV_SecAmmoCap", 1);
					AmmoBarForHUD(PB203_weaponslist[i][1], "sae_PAE", "sae_PrimaryAmmoVeryLow", "sae_PrimaryAmmoLow", "sae_PrimaryAmmoOk");
					AmmoBarForHUD(PB203_weaponslist[i][2], "sae_SAE", "sae_SecondaryAmmoVeryLow", "sae_SecondaryAmmoLow", "sae_SecondaryAmmoOk");

					If((PB203_weaponslist[i][3]) == "Yes") GiveInventory("sae_Secondary", 1);
					Else TakeInventory("sae_Secondary", 1);

					If( PB203_weaponslist[i][1] == "NoPrimary" ) 
					{
						GiveInventory("sae_Melee", 1);
					}
					Else
					{
						TakeInventory("sae_Melee", 1);
					}
					Break;
				}
				Else
				{
					TakeInventory("sae_known", 1);
					sae_WNAME[PlayerNumber()] = StrLeft(GetWeapon(), 10);
				}
			}
		}
		Else If (is_brutalv20)
		{
			For(i=0; i < BRUTALV20_NumOfWeap; i++)
			{
				If(CheckWeapon(BRUTALV20_weaponslist[i][0]))
				{
					GiveInventory("sae_known", 1);
					sae_WNAME[PlayerNumber()] = BRUTALV20_weaponslist[i][4];
					sae_SecAmmoCap[PlayerNumber()] = GetAmmoCapacity(BRUTALV20_weaponslist[i][2]);
					If ( sae_SecAmmoCap[PlayerNumber()] > 2 ) GiveInventory("UDV_SecAmmoCap", 1);
					Else TakeInventory("UDV_SecAmmoCap", 1);
					AmmoBarForHUD(BRUTALV20_weaponslist[i][1], "sae_PAE", "sae_PrimaryAmmoVeryLow", "sae_PrimaryAmmoLow", "sae_PrimaryAmmoOk");
					AmmoBarForHUD(BRUTALV20_weaponslist[i][2], "sae_SAE", "sae_SecondaryAmmoVeryLow", "sae_SecondaryAmmoLow", "sae_SecondaryAmmoOk");
					
					If((BRUTALV20_weaponslist[i][3]) == "Yes") GiveInventory("sae_Secondary", 1);
					Else TakeInventory("sae_Secondary", 1);

					If( BRUTALV20_weaponslist[i][1] == "NoPrimary" ) 
					{
						GiveInventory("sae_Melee", 1);
					}
					Else
					{
						TakeInventory("sae_Melee", 1);
					}

					Break;
				}
				Else
				{
					TakeInventory("sae_known", 1);
					sae_WNAME[PlayerNumber()] = StrLeft(GetWeapon(), 10);
				}
			}
		}
		Else If(is_smooth)
		{
			For(i=0; i < SMOOTH_NumOfWeap; i++)
			{
				If(CheckWeapon(SMOOTH_weaponslist[i][0]))
				{
					GiveInventory("sae_known", 1);
					sae_WNAME[PlayerNumber()] = SMOOTH_weaponslist[i][4];
					sae_SecAmmoCap[PlayerNumber()] = GetAmmoCapacity(SMOOTH_weaponslist[i][2]);
					If ( sae_SecAmmoCap[PlayerNumber()] > 2 ) GiveInventory("UDV_SecAmmoCap", 1);
					Else TakeInventory("UDV_SecAmmoCap", 1);
					AmmoBarForHUD(SMOOTH_weaponslist[i][1], "sae_PAE", "sae_PrimaryAmmoVeryLow", "sae_PrimaryAmmoLow", "sae_PrimaryAmmoOk");
					AmmoBarForHUD(SMOOTH_weaponslist[i][2], "sae_SAE", "sae_SecondaryAmmoVeryLow", "sae_SecondaryAmmoLow", "sae_SecondaryAmmoOk");
					
					If((SMOOTH_weaponslist[i][3]) == "Yes") GiveInventory("sae_Secondary", 1);
					Else TakeInventory("sae_Secondary", 1);

					If( SMOOTH_weaponslist[i][1] == "NoPrimary" ) 
					{
						GiveInventory("sae_Melee", 1);
					}
					Else
					{
						TakeInventory("sae_Melee", 1);
					}

					Break;
				}
				Else
				{
					TakeInventory("sae_known", 1);
					sae_WNAME[PlayerNumber()] = StrLeft(GetWeapon(), 10);
				}
			}
		}
		Else
		{
			For(i=0; i < NONE_NumOfWeap; i++)
			{
				If(CheckWeapon(NONE_weaponslist[i][0]))
				{
					GiveInventory("sae_known", 1);
					sae_WNAME[PlayerNumber()] = NONE_weaponslist[i][4];
					sae_SecAmmoCap[PlayerNumber()] = GetAmmoCapacity(NONE_weaponslist[i][2]);
					If ( sae_SecAmmoCap[PlayerNumber()] > 2 ) GiveInventory("UDV_SecAmmoCap", 1);
					Else TakeInventory("UDV_SecAmmoCap", 1);
					AmmoBarForHUD(NONE_weaponslist[i][1], "sae_PAE", "sae_PrimaryAmmoVeryLow", "sae_PrimaryAmmoLow", "sae_PrimaryAmmoOk");
					AmmoBarForHUD(NONE_weaponslist[i][2], "sae_SAE", "sae_SecondaryAmmoVeryLow", "sae_SecondaryAmmoLow", "sae_SecondaryAmmoOk");
					
					If((NONE_weaponslist[i][3]) == "Yes") GiveInventory("sae_Secondary", 1);
					Else TakeInventory("sae_Secondary", 1);

					If( NONE_weaponslist[i][1] == "NoPrimary" ) 
					{
						GiveInventory("sae_Melee", 1);
					}
					Else
					{
						TakeInventory("sae_Melee", 1);
					}

					Break;
				}
				Else
				{
					TakeInventory("sae_known", 1);
					sae_WNAME[PlayerNumber()] = StrLeft(GetWeapon(), 10);
				}
			}
		}
	}
}

Function void BuildWeaponList (void)
{
	Int WpnCntr;
	int i;
	int list_aspect;
	If(GetUserCVAR(PlayerNumber(), "udv_disableweapon"))//disableweapon
	{
		If(CheckInventory("exverify"))	WpnCntr = NONE_StandWeap + 2;
		Else WpnCntr = NONE_StandWeap;
				
		For(i = 0; i <= WpnCntr; i++)
		{
			list_aspect = GetAspectRatio();
			SetHudSize(930,730,1);
			SetFont("UDVSmall");

			If(CheckWeapon(NONE_weaponslist[i][0]))
			{
				If(list_aspect == ASPECT_4_3)
				{
				HudMessage(s:NONE_weaponslist[i][5];
				HUDMSG_PLAIN | HUDMSG_COLORSTRING | HUDMSG_ALPHA | HUDMSG_NOTWITHFULLMAP | HUDMSG_NOTWITHOVERLAYMAP, (i+455), "SaeHUDGr", 105.0, ((i*10)<<16)+22.1, 0.2, 1.0);
				}
				Else
				{
				HudMessage(s:NONE_weaponslist[i][5];
				HUDMSG_PLAIN | HUDMSG_COLORSTRING | HUDMSG_ALPHA | HUDMSG_NOTWITHFULLMAP | HUDMSG_NOTWITHOVERLAYMAP, (i+455), "SaeHUDGr", -20.0, ((i*10)<<16)+22.1, 0.2, 1.0);
				}
			}
			Else If(CheckInventory(NONE_weaponslist[i][0]))
			{
				If(list_aspect == ASPECT_4_3)
				{
				HudMessage(s:NONE_weaponslist[i][5];
				HUDMSG_PLAIN | HUDMSG_COLORSTRING | HUDMSG_ALPHA | HUDMSG_NOTWITHFULLMAP | HUDMSG_NOTWITHOVERLAYMAP, (i+455), "SaeHUDGr", 105.0, ((i*10)<<16)+22.1, 0.2, 0.35);
				}
				Else
				{
				HudMessage(s:NONE_weaponslist[i][5];
				HUDMSG_PLAIN | HUDMSG_COLORSTRING | HUDMSG_ALPHA | HUDMSG_NOTWITHFULLMAP | HUDMSG_NOTWITHOVERLAYMAP, (i+455), "SaeHUDGr", -20.0, ((i*10)<<16)+22.1, 0.2, 0.35);
				}
			}
			Else
			{
				If(list_aspect == ASPECT_4_3)
				{
				HudMessage(s:NONE_weaponslist[i][5];
				HUDMSG_PLAIN | HUDMSG_COLORSTRING | HUDMSG_ALPHA | HUDMSG_NOTWITHFULLMAP | HUDMSG_NOTWITHOVERLAYMAP, (i+455), "SaeHUDGr", 105.0, ((i*10)<<16)+22.1, 0.2, 0.15);
				}
				Else
				{
				HudMessage(s:NONE_weaponslist[i][5];
				HUDMSG_PLAIN | HUDMSG_COLORSTRING | HUDMSG_ALPHA | HUDMSG_NOTWITHFULLMAP | HUDMSG_NOTWITHOVERLAYMAP, (i+455), "SaeHUDGr", -20.0, ((i*10)<<16)+22.1, 0.2, 0.15);
				}
			}
		}
	}//end disableweapon
	Else//no disableweapon
	{
		If(is_PB3)
		{
			If(PlayerClass(PlayerNumber()) == 0 )
			{
				// If(CheckInventory("exverify")) WpnCntr = PB_StandWeap + 2;
				// Else WpnCntr = PB_StandWeap;
				For(i = 0; i <= PB_NumOfWeap; i++)
				{
					list_aspect = GetAspectRatio();
					SetHudSize(930,730,1);
					SetFont("UDVSmall");
					
					If((PB_weaponslist[i][6]) == "YES" || ((PB_weaponslist[i][6]) == "HIDDEN" && CheckInventory((PB_weaponslist[i][0])) ) )
					{
						If(list_aspect == ASPECT_4_3)
						{
							If (CheckWeapon("PB_Deagle") && i == 4)//necessary for the special case of the Quad SSG upgrade
							{
								HudMessage(s:PB_weaponslist[i+22][5];
								HUDMSG_PLAIN | HUDMSG_COLORSTRING | HUDMSG_ALPHA | HUDMSG_NOTWITHFULLMAP | HUDMSG_NOTWITHOVERLAYMAP, (i+455), "SaeHUDGr", 105.0, ((i*10)<<16)+22.1, 0.2, 1.0);
							}
							Else If (CheckWeapon("PB_QuadSG") && i == 9)//necessary for the special case of the Quad SSG upgrade
							{
								HudMessage(s:PB_weaponslist[i+18][5];
								HUDMSG_PLAIN | HUDMSG_COLORSTRING | HUDMSG_ALPHA | HUDMSG_NOTWITHFULLMAP | HUDMSG_NOTWITHOVERLAYMAP, (i+455), "SaeHUDGr", 105.0, ((i*10)<<16)+22.1, 0.2, 1.0);
							}
							Else If (CheckWeapon("PB_LMG") && i == 11)//necessary for the special case of the Quad SSG upgrade
							{
								HudMessage(s:PB_weaponslist[29][5];
								HUDMSG_PLAIN | HUDMSG_COLORSTRING | HUDMSG_ALPHA | HUDMSG_NOTWITHFULLMAP | HUDMSG_NOTWITHOVERLAYMAP, (i+455), "SaeHUDGr", 105.0, ((i*10)<<16)+22.1, 0.2, 1.0);
							}
							Else If (CheckWeapon("PB_PulseCannon") && i == 17)//necessary for the special case of the Quad SSG upgrade
							{
								HudMessage(s:PB_weaponslist[28][5];
								HUDMSG_PLAIN | HUDMSG_COLORSTRING | HUDMSG_ALPHA | HUDMSG_NOTWITHFULLMAP | HUDMSG_NOTWITHOVERLAYMAP, (i+455), "SaeHUDGr", 105.0, ((i*10)<<16)+22.1, 0.2, 1.0);
							}
							Else If(CheckWeapon(PB_weaponslist[i][0]))
							{
								HudMessage(s:PB_weaponslist[i][5];
								HUDMSG_PLAIN | HUDMSG_COLORSTRING | HUDMSG_ALPHA | HUDMSG_NOTWITHFULLMAP | HUDMSG_NOTWITHOVERLAYMAP, (i+455), "SaeHUDGr", 105.0, ((i*10)<<16)+22.1, 0.2, 1.0);
							}

							Else If(CheckInventory("PB_Deagle") && i == 4)
							{
								HudMessage(s:PB_weaponslist[i+22][5];
								HUDMSG_PLAIN | HUDMSG_COLORSTRING | HUDMSG_ALPHA | HUDMSG_NOTWITHFULLMAP | HUDMSG_NOTWITHOVERLAYMAP, (i+455), "SaeHUDGr", 105.0, ((i*10)<<16)+22.1, 0.2, 0.35);
							}
							Else If(CheckInventory("PB_QuadSG") && i == 9)
							{
								HudMessage(s:PB_weaponslist[i+18][5];
								HUDMSG_PLAIN | HUDMSG_COLORSTRING | HUDMSG_ALPHA | HUDMSG_NOTWITHFULLMAP | HUDMSG_NOTWITHOVERLAYMAP, (i+455), "SaeHUDGr", 105.0, ((i*10)<<16)+22.1, 0.2, 0.35);
							}
							Else If(CheckInventory("PB_LMG") && i == 11)
							{
								HudMessage(s:PB_weaponslist[29][5];
								HUDMSG_PLAIN | HUDMSG_COLORSTRING | HUDMSG_ALPHA | HUDMSG_NOTWITHFULLMAP | HUDMSG_NOTWITHOVERLAYMAP, (i+455), "SaeHUDGr", 105.0, ((i*10)<<16)+22.1, 0.2, 0.35);
							}
							Else If(CheckInventory("PB_PulseCannon") && i == 17)
							{
								HudMessage(s:PB_weaponslist[28][5];
								HUDMSG_PLAIN | HUDMSG_COLORSTRING | HUDMSG_ALPHA | HUDMSG_NOTWITHFULLMAP | HUDMSG_NOTWITHOVERLAYMAP, (i+455), "SaeHUDGr", 105.0, ((i*10)<<16)+22.1, 0.2, 0.35);
							}
							Else If(CheckInventory(PB_weaponslist[i][0])) 
							{
								HudMessage(s:PB_weaponslist[i][5];
								HUDMSG_PLAIN | HUDMSG_COLORSTRING | HUDMSG_ALPHA | HUDMSG_NOTWITHFULLMAP | HUDMSG_NOTWITHOVERLAYMAP, (i+455), "SaeHUDGr", 105.0, ((i*10)<<16)+22.1, 0.2, 0.35);
							}

							Else 
							{
								HudMessage(s:PB_weaponslist[i][5];
								HUDMSG_PLAIN | HUDMSG_COLORSTRING | HUDMSG_ALPHA | HUDMSG_NOTWITHFULLMAP | HUDMSG_NOTWITHOVERLAYMAP, (i+455), "SaeHUDGr", 105.0, ((i*10)<<16)+22.1, 0.2, 0.15);
							}
						}
						Else
						{
							If (CheckWeapon("PB_Deagle") && i == 4)//necessary for the special case of the Quad SSG upgrade
							{
								HudMessage(s:PB_weaponslist[i+22][5];
								HUDMSG_PLAIN | HUDMSG_COLORSTRING | HUDMSG_ALPHA | HUDMSG_NOTWITHFULLMAP | HUDMSG_NOTWITHOVERLAYMAP, (i+455), "SaeHUDGr", -20.0, ((i*10)<<16)+22.1, 0.2, 1.0);
							}
							Else If (CheckWeapon("PB_QuadSG") && i == 9)//necessary for the special case of the Quad SSG upgrade
							{
								HudMessage(s:PB_weaponslist[i+18][5];
								HUDMSG_PLAIN | HUDMSG_COLORSTRING | HUDMSG_ALPHA | HUDMSG_NOTWITHFULLMAP | HUDMSG_NOTWITHOVERLAYMAP, (i+455), "SaeHUDGr", -20.0, ((i*10)<<16)+22.1, 0.2, 1.0);
							}
							Else If (CheckWeapon("PB_LMG") && i == 11)//necessary for the special case of the Quad SSG upgrade
							{
								HudMessage(s:PB_weaponslist[29][5];
								HUDMSG_PLAIN | HUDMSG_COLORSTRING | HUDMSG_ALPHA | HUDMSG_NOTWITHFULLMAP | HUDMSG_NOTWITHOVERLAYMAP, (i+455), "SaeHUDGr", -20.0, ((i*10)<<16)+22.1, 0.2, 1.0);
							}
							Else If (CheckWeapon("PB_PulseCannon") && i == 17)//necessary for the special case of the Quad SSG upgrade
							{
								HudMessage(s:PB_weaponslist[28][5];
								HUDMSG_PLAIN | HUDMSG_COLORSTRING | HUDMSG_ALPHA | HUDMSG_NOTWITHFULLMAP | HUDMSG_NOTWITHOVERLAYMAP, (i+455), "SaeHUDGr", -20.0, ((i*10)<<16)+22.1, 0.2, 1.0);
							}
							Else If(CheckWeapon(PB_weaponslist[i][0]))
							{
								HudMessage(s:PB_weaponslist[i][5];
								HUDMSG_PLAIN | HUDMSG_COLORSTRING | HUDMSG_ALPHA | HUDMSG_NOTWITHFULLMAP | HUDMSG_NOTWITHOVERLAYMAP, (i+455), "SaeHUDGr", -20.0, ((i*10)<<16)+22.1, 0.2, 1.0);
							} 

							Else If (CheckInventory("PB_Deagle") && i == 4)//necessary for the special case of the PulseCannon upgrade
							{
								HudMessage(s:PB_weaponslist[i+22][5];
								HUDMSG_PLAIN | HUDMSG_COLORSTRING | HUDMSG_ALPHA | HUDMSG_NOTWITHFULLMAP | HUDMSG_NOTWITHOVERLAYMAP, (i+455), "SaeHUDGr", -20.0, ((i*10)<<16)+22.1, 0.2, 0.35);
							}
							Else If (CheckInventory("PB_QuadSG") && i == 9)//necessary for the special case of the PulseCannon upgrade
							{
								HudMessage(s:PB_weaponslist[i+18][5];
								HUDMSG_PLAIN | HUDMSG_COLORSTRING | HUDMSG_ALPHA | HUDMSG_NOTWITHFULLMAP | HUDMSG_NOTWITHOVERLAYMAP, (i+455), "SaeHUDGr", -20.0, ((i*10)<<16)+22.1, 0.2, 0.35);
							}
							Else If (CheckInventory("PB_LMG") && i == 11)//necessary for the special case of the PulseCannon upgrade
							{
								HudMessage(s:PB_weaponslist[29][5];
								HUDMSG_PLAIN | HUDMSG_COLORSTRING | HUDMSG_ALPHA | HUDMSG_NOTWITHFULLMAP | HUDMSG_NOTWITHOVERLAYMAP, (i+455), "SaeHUDGr", -20.0, ((i*10)<<16)+22.1, 0.2, 0.35);
							}
							Else If(CheckInventory("PB_PulseCannon") && i == 17)
							{
								HudMessage(s:PB_weaponslist[28][5];
								HUDMSG_PLAIN | HUDMSG_COLORSTRING | HUDMSG_ALPHA | HUDMSG_NOTWITHFULLMAP | HUDMSG_NOTWITHOVERLAYMAP, (i+455), "SaeHUDGr", -20.0, ((i*10)<<16)+22.1, 0.2, 0.35);
							}
							Else If(CheckInventory(PB_weaponslist[i][0])) 
							{
								HudMessage(s:PB_weaponslist[i][5];
								HUDMSG_PLAIN | HUDMSG_COLORSTRING | HUDMSG_ALPHA | HUDMSG_NOTWITHFULLMAP | HUDMSG_NOTWITHOVERLAYMAP, (i+455), "SaeHUDGr", -20.0, ((i*10)<<16)+22.1, 0.2, 0.35);
							}

							Else 
							{
								HudMessage(s:PB_weaponslist[i][5];
								HUDMSG_PLAIN | HUDMSG_COLORSTRING | HUDMSG_ALPHA | HUDMSG_NOTWITHFULLMAP | HUDMSG_NOTWITHOVERLAYMAP, (i+455), "SaeHUDGr", -20.0, ((i*10)<<16)+22.1, 0.2, 0.15);
							}
						}
					}
					Else If((PB_weaponslist[i][6]) == "HIDDEN" && !CheckInventory((PB_weaponslist[i][0]))){
						If(list_aspect == ASPECT_4_3)
						{
							HudMessage(s:"Unavailable";
							HUDMSG_PLAIN | HUDMSG_COLORSTRING | HUDMSG_ALPHA | HUDMSG_NOTWITHFULLMAP | HUDMSG_NOTWITHOVERLAYMAP, (i+455), "SaeHUDGr", 105.0, ((i*10)<<16)+22.1, 0.2, 0.15);
						}
						Else 
						{
							HudMessage(s:"Unavailable";
							HUDMSG_PLAIN | HUDMSG_COLORSTRING | HUDMSG_ALPHA | HUDMSG_NOTWITHFULLMAP | HUDMSG_NOTWITHOVERLAYMAP, (i+455), "SaeHUDGr", -20.0, ((i*10)<<16)+22.1, 0.2, 0.15);
						}
					}
				}
			}
		}
		Else
		{
			If(CheckInventory("exverify"))	WpnCntr = NONE_StandWeap + 2;
			Else WpnCntr = NONE_StandWeap;
				
			For(i = 0; i <= WpnCntr; i++)
			{
				list_aspect = GetAspectRatio();
				SetHudSize(930,730,1);
				SetFont("UDVSmall");
				If(CheckWeapon(NONE_weaponslist[i][0]))
				{
					If(list_aspect == ASPECT_4_3)
					{
						HudMessage(s:NONE_weaponslist[i][5];
						HUDMSG_PLAIN | HUDMSG_COLORSTRING | HUDMSG_ALPHA | HUDMSG_NOTWITHFULLMAP | HUDMSG_NOTWITHOVERLAYMAP, (i+455), "SaeHUDGr", 105.0, ((i*10)<<16)+22.1, 0.2, 1.0);
					}
					Else
					{
						HudMessage(s:NONE_weaponslist[i][5];
						HUDMSG_PLAIN | HUDMSG_COLORSTRING | HUDMSG_ALPHA | HUDMSG_NOTWITHFULLMAP | HUDMSG_NOTWITHOVERLAYMAP, (i+455), "SaeHUDGr", -20.0, ((i*10)<<16)+22.1, 0.2, 1.0);
					}
				}
				Else If(CheckInventory(NONE_weaponslist[i][0]))
				{
					If(list_aspect == ASPECT_4_3)
					{
						HudMessage(s:NONE_weaponslist[i][5];
						HUDMSG_PLAIN | HUDMSG_COLORSTRING | HUDMSG_ALPHA | HUDMSG_NOTWITHFULLMAP | HUDMSG_NOTWITHOVERLAYMAP, (i+455), "SaeHUDGr", 105.0, ((i*10)<<16)+22.1, 0.2, 0.35);
					}
					Else
					{
						HudMessage(s:NONE_weaponslist[i][5];
						HUDMSG_PLAIN | HUDMSG_COLORSTRING | HUDMSG_ALPHA | HUDMSG_NOTWITHFULLMAP | HUDMSG_NOTWITHOVERLAYMAP, (i+455), "SaeHUDGr", -20.0, ((i*10)<<16)+22.1, 0.2, 0.35);
					}
				}
				Else
				{
					If(list_aspect == ASPECT_4_3)
					{
						HudMessage(s:NONE_weaponslist[i][5];
						HUDMSG_PLAIN | HUDMSG_COLORSTRING | HUDMSG_ALPHA | HUDMSG_NOTWITHFULLMAP | HUDMSG_NOTWITHOVERLAYMAP, (i+455), "SaeHUDGr", 105.0, ((i*10)<<16)+22.1, 0.2, 0.15);
					}
					Else
					{
						HudMessage(s:NONE_weaponslist[i][5];
						HUDMSG_PLAIN | HUDMSG_COLORSTRING | HUDMSG_ALPHA | HUDMSG_NOTWITHFULLMAP | HUDMSG_NOTWITHOVERLAYMAP, (i+455), "SaeHUDGr", -20.0, ((i*10)<<16)+22.1, 0.2, 0.15);
					}
				}
			}
		}
	}
}


/* Scripts */

Script 24008 Enter
{
	if (GameType () != GAME_TITLE_MAP)
	{
		SETFONT("SMALLFONT");
		While(TRUE)
		{
			GetEquippedWeaponAndAmmo();
			If( GetUserCVAR(PlayerNumber(), "saehud_togglelist"))
			{
				If ( !CheckInventory("sae_extcam") && !CheckInventory("D4BaronHUD") && !CheckInventory("Revenant_Rune") )// && !CheckInventory("sae_deathcam") )
				{
					BuildWeaponList();
				}
			}
			Delay(1);
		}
	}
}